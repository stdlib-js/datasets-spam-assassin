{"id":"00106","group":"easy-ham-2","checksum":{"type":"MD5","value":"5c4519d12bf9435ebbc0c648836b21b1"},"text":"From ilug-admin@linux.ie  Mon Jul 22 19:49:23 2002\nReturn-Path: <ilug-admin@linux.ie>\nDelivered-To: yyyy@localhost.netnoteinc.com\nReceived: from localhost (localhost [127.0.0.1])\n\tby phobos.labs.netnoteinc.com (Postfix) with ESMTP id 3726B440C8\n\tfor <jm@localhost>; Mon, 22 Jul 2002 14:49:21 -0400 (EDT)\nReceived: from dogma.slashnull.org [212.17.35.15]\n\tby localhost with IMAP (fetchmail-5.9.0)\n\tfor jm@localhost (single-drop); Mon, 22 Jul 2002 19:49:21 +0100 (IST)\nReceived: from webnote.net (mail.webnote.net [193.120.211.219]) by\n    dogma.slashnull.org (8.11.6/8.11.6) with ESMTP id g6MG1DY16485 for\n    <jm-ilug@jmason.org>; Mon, 22 Jul 2002 17:01:13 +0100\nReceived: from lugh.tuatha.org (root@lugh.tuatha.org [194.125.145.45]) by\n    webnote.net (8.9.3/8.9.3) with ESMTP id LAA27022 for <jm-ilug@jmason.org>;\n    Sun, 21 Jul 2002 11:01:08 +0100\nReceived: from lugh (root@localhost [127.0.0.1]) by lugh.tuatha.org\n    (8.9.3/8.9.3) with ESMTP id LAA03542; Sun, 21 Jul 2002 11:00:17 +0100\nReceived: from linux.local ([195.218.108.167]) by lugh.tuatha.org\n    (8.9.3/8.9.3) with ESMTP id KAA03495 for <ilug@linux.ie>; Sun,\n    21 Jul 2002 10:59:40 +0100\nX-Authentication-Warning: lugh.tuatha.org: Host [195.218.108.167] claimed\n    to be linux.local\nReceived: from linux.local (localhost [127.0.0.1]) by linux.local\n    (8.11.6/8.11.6/SuSE Linux 0.5) with ESMTP id g6L121X21767 for\n    <ilug@linux.ie>; Sun, 21 Jul 2002 02:02:01 +0100\nMessage-Id: <200207210102.g6L121X21767@linux.local>\nTo: Irish Linux Users Group <ilug@linux.ie>\nReply-To: Irish Linux Users Group <ilug@linux.ie>\nSubject: Re: [ILUG] vanquishing the daemons of shell scripting\nIn-Reply-To: Message from Stephen Shirley <diamond@skynet.ie> of\n    \"Sat, 20 Jul 2002 10:47:36 BST.\"\n    <20020720094736.GA16224@skynet.ie>\nX-Mailer: [nmh-1.0.4] MH.6.8, SuSE Linux 7.3\nX-Url: http://www.blf.utvinternet.ie\nMIME-Version: 1.0\nContent-Type: text/plain; charset=\"utf-8\"\nContent-Id: <21764.1027213321.1@linux.local>\nDate: Sun, 21 Jul 2002 02:02:01 +0100\nFrom: Brian Foster <blf@utvinternet.ie>\nContent-Transfer-Encoding: 8bit\nX-MIME-Autoconverted: from quoted-printable to 8bit by lugh.tuatha.org id\n    KAA03495\nSender: ilug-admin@linux.ie\nErrors-To: ilug-admin@linux.ie\nX-Mailman-Version: 1.1\nPrecedence: bulk\nList-Id: Irish Linux Users' Group <ilug.linux.ie>\nX-Beenthere: ilug@linux.ie\n\n  | Date: Sat, 20 Jul 2002 10:47:36 +0100\n  | From: Stephen Shirley <diamond@skynet.ie>\n  |[ ... ]\n  | It's very easy to get one program to act on the output of a second\n  | program: cmd1 | cmd2. But, what if you want cmd1 to act on the output\n  | of cmd2 as well? Hmm. Eventually, I came up with this solution:\n  | \n  |    mkfifo io\n  |    cmd1 <io | cmd2 > io\n  | \n  | and bingo, all was well with the world. Now, I have (and had) a sneaking\n  | suspcion that it might be possible to do this without using a fifo, and\n  | can be done using something like:\n  | \n 1|    exec 3>&1\n 2|    cmd1 <&3 | cmd2 >&3\n 3|    exec 3>&-\n  | \n  | but that doesn't work in that form, and i couldn't work out an\n  | incantation that would. Anyone got any suggestions?  [ ... ]\n\n the above, or something close to it, would work if, when the\n 1st line is executed, file descriptor (fdesc) 1 is open for both\n read and write (R/W) to a suitable entity (e.g., a pipe/FIFO; I\n imagine a socket or something of that ilk could be made to work\n but have no idea why you'd want to go to the trouble.... ).\n\n but in any case, all that is unlikely to be the case:\n  · most probably, fdesc 1 is yer tty (e.g. screen + keyboard);\n and\n  · quite possibly is open only for write (being stdout).\n\n you need it open for R/W because all dup2(2) --- which is all\n `n>&m' means -- does is replicate the fdesc handle.  it does not\n change the access mode; e.g., if the original fdesc (m) was only\n open for writing (W), that's all the new fdesc (n) is open for.\n yet in the 2nd line, it's needed for both R (cmd1) and W (cmd2).\n\n whilst it's impossible to say for certain from this excerpt, it\n seems a reasonable guess that fdesc 1 when the 1st line executes\n is the stdout of the script itself, which is most probably yer\n tty.  that means, if it does happen to be open for R/W (which is\n the case on some systems), `cmd2' would be writing to the screen\n whilst `cmd1' is reading from the keyboard --- i.e., the poor\n confused human luser is \"clearly\" expected to manually echo back\n to the computer what it prints.\n\n good luck!  ;-)\n\n upshot:  the FIFO is needed.  and this isn't a shell scripting\n          problem per se.\n\n the FIFO solution is fine.  I've used variations (plural) on\n this approach to extend the Korn (ksh(1)) shell language, by\n providing a co-processing interpreter --- `ksh' sends certain\n predefined commands to the co-process, handling control over\n to the co-process until it indicates processing is complete\n and `ksh' can resume normal processing.  with some thought and\n care to insure signals do something rational, works great for\n adding a scripting language (which is the purpose) cheaply to\n script-less programs (useful when you can't modify the, IMHO,\n buggy program to use, e.g., TCL).\n\ncheers!\n\t-blf-\n--\n Innovative, very experienced, Unix and      | Brian Foster    Dublin, Ireland\n Chorus (embedded RTOS) kernel internals     | e-mail: blf@utvinternet.ie\n expert looking for a new position ...       | mobile: (+353 or 0)86 854 9268\n  For a résumé, contact me, or see my website  http://www.blf.utvinternet.ie\n\n    Stop E$$o (ExxonMobile):  «Whatever you do, don't buy Esso --- they\n     don't give a damn about global warming.»    http://www.stopesso.com\n     Supported by Greenpeace, Friends of the Earth, and numerous others...\n\n-- \nIrish Linux Users' Group: ilug@linux.ie\nhttp://www.linux.ie/mailman/listinfo/ilug for (un)subscription information.\nList maintainer: listmaster@linux.ie\n\n\n"}