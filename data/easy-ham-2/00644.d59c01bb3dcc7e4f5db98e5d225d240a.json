{"id":"00644","group":"easy-ham-2","checksum":{"type":"MD5","value":"d59c01bb3dcc7e4f5db98e5d225d240a"},"text":"From razor-users-admin@lists.sourceforge.net  Thu Aug 15 10:49:32 2002\nReturn-Path: <razor-users-admin@example.sourceforge.net>\nDelivered-To: yyyy@localhost.netnoteinc.com\nReceived: from localhost (localhost [127.0.0.1])\n\tby phobos.labs.netnoteinc.com (Postfix) with ESMTP id 4CBE243C4B\n\tfor <jm@localhost>; Thu, 15 Aug 2002 05:48:23 -0400 (EDT)\nReceived: from phobos [127.0.0.1]\n\tby localhost with IMAP (fetchmail-5.9.0)\n\tfor jm@localhost (single-drop); Thu, 15 Aug 2002 10:48:23 +0100 (IST)\nReceived: from usw-sf-list2.sourceforge.net (usw-sf-fw2.sourceforge.net\n    [216.136.171.252]) by dogma.slashnull.org (8.11.6/8.11.6) with ESMTP id\n    g7ELPr404460 for <jm-razor@jmason.org>; Wed, 14 Aug 2002 22:25:53 +0100\nReceived: from usw-sf-list1-b.sourceforge.net ([10.3.1.13]\n    helo=usw-sf-list1.sourceforge.net) by usw-sf-list2.sourceforge.net with\n    esmtp (Exim 3.31-VA-mm2 #1 (Debian)) id 17f5Ss-0006FI-00; Wed,\n    14 Aug 2002 14:14:02 -0700\nReceived: from h-66-134-120-173.lsanca54.covad.net ([66.134.120.173]\n    helo=stealthgeeks.net) by usw-sf-list1.sourceforge.net with smtp (Exim\n    3.31-VA-mm2 #1 (Debian)) id 17f5Rv-0005qy-00 for\n    <razor-users@lists.sourceforge.net>; Wed, 14 Aug 2002 14:13:03 -0700\nReceived: (qmail 68094 invoked by uid 1001); 14 Aug 2002 21:12:56 -0000\nReceived: from localhost (sendmail-bs@127.0.0.1) by localhost with SMTP;\n    14 Aug 2002 21:12:56 -0000\nFrom: Patrick <patrick@stealthgeeks.net>\nTo: \"Oates, Isaac\" <ioates@amazon.com>\nCc: razor-users@example.sourceforge.net\nSubject: Re: [Razor-users] many vs one\nIn-Reply-To: <1C63DA9F9722C2499FA0475B8B8625E32151ED@ex-mail-04.ant.amazon.com>\nMessage-Id: <20020814135041.B67991-100000@rockstar.stealthgeeks.net>\nMIME-Version: 1.0\nContent-Type: TEXT/PLAIN; charset=US-ASCII\nSender: razor-users-admin@example.sourceforge.net\nErrors-To: razor-users-admin@example.sourceforge.net\nX-Beenthere: razor-users@example.sourceforge.net\nX-Mailman-Version: 2.0.9-sf.net\nPrecedence: bulk\nList-Help: <mailto:razor-users-request@example.sourceforge.net?subject=help>\nList-Post: <mailto:razor-users@example.sourceforge.net>\nList-Subscribe: <https://example.sourceforge.net/lists/listinfo/razor-users>,\n    <mailto:razor-users-request@lists.sourceforge.net?subject=subscribe>\nList-Id: <razor-users.example.sourceforge.net>\nList-Unsubscribe: <https://example.sourceforge.net/lists/listinfo/razor-users>,\n    <mailto:razor-users-request@lists.sourceforge.net?subject=unsubscribe>\nList-Archive: <http://www.geocrawler.com/redir-sf.php3?list=razor-users>\nX-Original-Date: Wed, 14 Aug 2002 14:12:56 -0700 (PDT)\nDate: Wed, 14 Aug 2002 14:12:56 -0700 (PDT)\n\nOn Wed, 14 Aug 2002, Oates, Isaac wrote:\n\n> I'm new to razor but have studied trust systems before.  I've been following\n> the threads about TeS and have a few thoughts.\n>\n> First, a more complex algorithm is not always better.  As soon as you start\n> accounting for edge cases in what should otherwise be a generalized\n> algorithm, general performance begins to degrade exponentially.  The\n> thing that razor should have going for it is numbers.  Say that razor\n> has 100,000 people that actively use it (i.e. click the \"Spam\" button on\n> their mail reader from time to time.)  If we decide that our objective\n> is to screen 99.0% of spam, it means that we can continue to show what\n> appears to be a piece of spam to 1,000 people and still meet our\n> objective.\n>\n> Why not just wait for 1,000 people to vote that a piece of mail is indeed\n> spam before ever acknowledging that it could potentially be spam?  In\n> other words, when I razor-report a message, should I be able to tell\n> that razor has ever even seen that message?\n\nBecause you then have a system that is ineffective to a varying degree. A\nsimplistic view would be that 999 subscribers received a piece of spam\nthat could have otherwise been avoided. But the reality is likely that\nmany, many more individuals would have received the piece of spam when you\nfactor in report times.\n\n> By having the server pretend to never have seen it, you can avoid\n> people who just re-report spam because it was already marked as spam,\n> something that is completely useless.\n\nWrong. razor-check will tell you if a specific piece of mail matches\nsomething already in the database. If you have the system pretend to have\nnever seen a piece of mail, how do you propose people use the system for\nfiltering?\n\n> What about revocations?  A revocation is after the fact because a\n>  substantial number of people (1,000, in this example) have already\n> decided that they do not want that message.  If it is marked as spam by\n> all those people, and then people start revoking it, what does that\n> mean?\n\n> It means that the revokers have an opinion that probably doesn't mesh\n> with the majority;\n\nNo, it means that the people doing the revoking have a different opinion\nthan the 1000 people who have submitted it as spam. Rather the 1000 people\nwho have reported the message as spam constitute a majority or not is\nsomething that would have to be determined in the context of the\nindividual message.\n\n> instead of messing with its rating, why not just put\n> it on the whitelist?  If I want that ZDNet mail, and most people think\n> that ZDNet mail is just plain annoying, then why can't I whitelist it,\n> instead of \"arguing\" with everyone about whether or not it's spam?\n\nYou always have that ability.\n\n> Correct me if I'm wrong, but it's not as if all mail from ZDNet will be\n> banned in the future-just that one piece.  So if ZDNet were to change\n> its system to make it easier to opt out, or whatever, people would hopefully\n>  start unsubscribing instead of clicking the \"Spam\" button.\n\nIt's my opinion that it's not my job to unsubscribe to any list that I\nhaven't subscribed to, nor is it necessarily in my best interest given\nthat some parties sending unwanted communications may utilize the\nunsubscribe request as a method of determining they are mailing a valid\naddress.\n\n> The inherent problem here, of course, is that someone can pretend to be\n> 1,000 people and block anything they choose.  But say you still have a\n> lightweight trust system built in, where when they \"agree\" with the\n> majority (though they couldn't have known because razor hadn't\n> acknowledged anything yet) then your trust rating goes up and vice\n> versa.\n>\n> The key here is that, in order to be reliable, you need the numbers.  What\n> am I missing here?\n\nSee above.\n\n\n/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\\n                               Patrick Greenwell\n         Asking the wrong questions is the leading cause of wrong answers\n\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/\n\n\n\n\n-------------------------------------------------------\nThis sf.net email is sponsored by: Dice - The leading online job board\nfor high-tech professionals. Search and apply for tech jobs today!\nhttp://seeker.dice.com/seeker.epl?rel_code=31\n_______________________________________________\nRazor-users mailing list\nRazor-users@lists.sourceforge.net\nhttps://lists.sourceforge.net/lists/listinfo/razor-users\n\n\n"}