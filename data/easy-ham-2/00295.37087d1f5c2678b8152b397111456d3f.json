{"id":"00295","group":"easy-ham-2","checksum":{"type":"MD5","value":"37087d1f5c2678b8152b397111456d3f"},"text":"From ilug-admin@linux.ie  Fri Aug  9 14:54:34 2002\nReturn-Path: <ilug-admin@linux.ie>\nDelivered-To: yyyy@localhost.netnoteinc.com\nReceived: from localhost (localhost [127.0.0.1])\n\tby phobos.labs.netnoteinc.com (Postfix) with ESMTP id 5E44543FB1\n\tfor <jm@localhost>; Fri,  9 Aug 2002 09:54:34 -0400 (EDT)\nReceived: from phobos [127.0.0.1]\n\tby localhost with IMAP (fetchmail-5.9.0)\n\tfor jm@localhost (single-drop); Fri, 09 Aug 2002 14:54:34 +0100 (IST)\nReceived: from webnote.net (mail.webnote.net [193.120.211.219]) by\n    dogma.slashnull.org (8.11.6/8.11.6) with ESMTP id g79DsYb03395 for\n    <jm-ilug@jmason.org>; Fri, 9 Aug 2002 14:54:34 +0100\nReceived: from lugh.tuatha.org (root@lugh.tuatha.org [194.125.145.45]) by\n    webnote.net (8.9.3/8.9.3) with ESMTP id OAA06691 for <jm-ilug@jmason.org>;\n    Fri, 9 Aug 2002 14:51:28 +0100\nReceived: from lugh (root@localhost [127.0.0.1]) by lugh.tuatha.org\n    (8.9.3/8.9.3) with ESMTP id OAA11276; Fri, 9 Aug 2002 14:50:36 +0100\nReceived: from hawk.dcu.ie (mail.dcu.ie [136.206.1.5]) by lugh.tuatha.org\n    (8.9.3/8.9.3) with ESMTP id OAA11243 for <ilug@linux.ie>; Fri,\n    9 Aug 2002 14:50:29 +0100\nX-Authentication-Warning: lugh.tuatha.org: Host mail.dcu.ie [136.206.1.5]\n    claimed to be hawk.dcu.ie\nReceived: from prodigy.redbrick.dcu.ie (136.206.15.10) by hawk.dcu.ie\n    (6.0.040) id 3D36BB4A00080847 for ilug@linux.ie; Fri, 9 Aug 2002 14:50:29\n    +0100\nReceived: by prodigy.redbrick.dcu.ie (Postfix, from userid 1023) id\n    F0207DA4A; Fri,  9 Aug 2002 14:50:28 +0100 (IST)\nDate: Fri, 9 Aug 2002 14:50:28 +0100\nFrom: Philip Reynolds <phil@redbrick.dcu.ie>\nTo: ilug@linux.ie\nSubject: Re: [ILUG] slashdot EW Dijkstra humor\nMessage-Id: <20020809145028.A6699@prodigy.Redbrick.DCU.IE>\nReferences: <55DA5264CE16D41186F600D0B74D6B0924724A@KBS01>\n    <009601c23f87$fdcf47b0$3864a8c0@sabeo.ie>\nMIME-Version: 1.0\nContent-Type: text/plain; charset=us-ascii\nContent-Disposition: inline\nUser-Agent: Mutt/1.2.5i\nIn-Reply-To: <009601c23f87$fdcf47b0$3864a8c0@sabeo.ie>; from\n    mfrench42@yahoo.co.uk on Fri, Aug 09, 2002 at 10:34:41AM +0100\nSender: ilug-admin@linux.ie\nErrors-To: ilug-admin@linux.ie\nX-Mailman-Version: 1.1\nPrecedence: bulk\nList-Id: Irish Linux Users' Group <ilug.linux.ie>\nX-Beenthere: ilug@linux.ie\n\nMatthew French's [mfrench42@yahoo.co.uk] 65 lines of wisdom included:\n> Brian O'Donoghue wrote a code fragment:\n> > For(a=0;a<strlen(somestring);a++)\n> > {\n> >  some_thing_goes_here();\n> >\n> >  if(b=strlen(somestring)-4)\n> > do_something;\n> >\n> > };\n> \n> Unfortunately strlen is a relatively expensive operation. If you are using\n> C++ this is not such a big issue as string.length() can be declared const.\n> So long as you do not modify the string object, the compiler can do the\n> caching for you.\n\nThere's a more simple reason as to why strlen shouldn't be used on\nthe string here, and that's because in future you could actually\nchange the contents of ``somestring'' within the for loop, and be\nleft wondering why the number of iterations are not as you expect.\n\nPhil.\n\n-- \nIrish Linux Users' Group: ilug@linux.ie\nhttp://www.linux.ie/mailman/listinfo/ilug for (un)subscription information.\nList maintainer: listmaster@linux.ie\n\n\n"}