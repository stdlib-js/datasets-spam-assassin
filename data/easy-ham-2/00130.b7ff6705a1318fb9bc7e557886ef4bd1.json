{"id":"00130","group":"easy-ham-2","checksum":{"type":"MD5","value":"b7ff6705a1318fb9bc7e557886ef4bd1"},"text":"From ilug-admin@linux.ie  Mon Jul 29 11:28:09 2002\nReturn-Path: <ilug-admin@linux.ie>\nDelivered-To: yyyy@localhost.netnoteinc.com\nReceived: from localhost (localhost [127.0.0.1])\n\tby phobos.labs.netnoteinc.com (Postfix) with ESMTP id 5184A440FB\n\tfor <jm@localhost>; Mon, 29 Jul 2002 06:25:14 -0400 (EDT)\nReceived: from phobos [127.0.0.1]\n\tby localhost with IMAP (fetchmail-5.9.0)\n\tfor jm@localhost (single-drop); Mon, 29 Jul 2002 11:25:14 +0100 (IST)\nReceived: from lugh.tuatha.org (root@lugh.tuatha.org [194.125.145.45]) by\n    dogma.slashnull.org (8.11.6/8.11.6) with ESMTP id g6S2jsi13115 for\n    <jm-ilug@jmason.org>; Sun, 28 Jul 2002 03:45:54 +0100\nReceived: from lugh (root@localhost [127.0.0.1]) by lugh.tuatha.org\n    (8.9.3/8.9.3) with ESMTP id DAA10880; Sun, 28 Jul 2002 03:44:08 +0100\nX-Authentication-Warning: lugh.tuatha.org: Host root@localhost [127.0.0.1]\n    claimed to be lugh\nReceived: from escargot.esatclear.ie (escargot.esatclear.ie\n    [194.145.128.30]) by lugh.tuatha.org (8.9.3/8.9.3) with ESMTP id DAA10838\n    for <ilug@linux.ie>; Sun, 28 Jul 2002 03:43:54 +0100\nReceived: from esatclear.ie (h-airlock084.esatclear.ie [194.165.161.84])\n    by escargot.esatclear.ie (8.9.3/8.9.3) with ESMTP id DAA29020 for\n    <ilug@linux.ie>; Sun, 28 Jul 2002 03:43:52 +0100\nMessage-Id: <3D4359EE.9050405@esatclear.ie>\nDate: Sun, 28 Jul 2002 03:41:50 +0100\nFrom: Paul Kelly <longword@esatclear.ie>\nUser-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20020725\nX-Accept-Language: en-us, en\nMIME-Version: 1.0\nTo: ilug@linux.ie\nSubject: Re: [ILUG] Optimizing for Pentium Pt.2\nReferences: <200207262228.XAA19581@lugh.tuatha.org>\n    <20020727015716.A6561@ie.suberic.net>\n    <200207271701.SAA23172@lugh.tuatha.org>\nContent-Type: text/plain; charset=us-ascii; format=flowed\nContent-Transfer-Encoding: 7bit\nSender: ilug-admin@linux.ie\nErrors-To: ilug-admin@linux.ie\nX-Mailman-Version: 1.1\nPrecedence: bulk\nList-Id: Irish Linux Users' Group <ilug.linux.ie>\nX-Beenthere: ilug@linux.ie\n\nJohn Gay wrote:\n> looking into these things. As Isaid, the PGCC site does not seem to have been \n> updated in at least a year or more?!? I am also looking into GCC itself. Now \n> that the 3.1. series is out, it might be better than when the PGCC patches \n> were written\n\ngcc has been as good as or better than pgcc for quite a while. pgcc was \nwas written back in the days when gcc splintered due to a perception of \nslow progress on the main branch. A number of Linux distributions wound \nup using egcs, partly derived from the pgcc work as I recall. Happiness \nwas restored to the world with gcc 2.95 and later.\n\n > The bottom line is, Pentiums have better instruction sets than\n> the original 386 instructions that they still support.\n\nNot really, no. The only instruction of consequence (to gcc anyway) \nsince the i386 was the CMOV introduced with the Pentium Pro. gcc 2.95 \nwill use that instruction if directed to with -march=pentiumpro and you \nwill generally get a few percent improvement out of it. Code compiled \nwith that option will fail on Pentium and earlier processors.\n\n> The Pentium also \n> started introducing pipelining so properly generated code can be upto 30% \n> faster than equivulent code that performs the same function!\n\nThat's the art of instruction scheduling - rearranging the instructions \ngenerated by the compiler such that they make best use of the parallel \n(\"superscalar\") pipelines present in a modern CPU. gcc 2.95 has a fair \ngo at scheduling according to the -mcpu=pentium/pentiumpro option. gcc \n3.1 does a better job, and fine tunes for a few more processors such as \nathlon and athlon-xp. They're in the process of replacing the compiler's \ninstruction scheduling with a whole new mechanism that should do an even \nbetter job, but that's a ways down the road yet in gcc 3.3.\n\nAs for the exotic extra instructions sets, gcc 3.1 will make use of SSE \nor SSE2 instructions instead of 387 instructions if you use the \n-mfpmath=sse option and you may see some speed benefit from it, but \nthere's a chance you may also see incompatibilities. gcc will still use \ni387 code for missing functionality in the SSE instruction set (double \nprecision floats for example).\n\nAFAIK no current gcc will ever use MMX or 3DNOW! instructions though gcc \n3.1 enables user code to explicitly generate these instructions with C \ncode. The kernel sometimes uses these instruction sets to get super-fast \nblock copies of memory or RAID math but not much else.\n\n> Not sure what improvements the P4 introduce? I think it's mostly just speed \n> improvements rather than any execution changes.\n\nP4 introduced SSE2, a _MUCH_ improved version of SSE and a viable \nreplacement for i387 FPU code. SSE supports only single precision floats \nwhile SSE2 can handle doubles. MMX and SSE shared registers with the FPU \nwhich hobbles them a bit, but SSE2 has its own large, dedicated register \nfile. So far P4 is the only CPU equipped with SSE2. AMD's x86-64 CPUs \nare said to have it as well. Of course x86-64 itself is a whole other \nball game...\n\nPaul.\n\n\n\n-- \nIrish Linux Users' Group: ilug@linux.ie\nhttp://www.linux.ie/mailman/listinfo/ilug for (un)subscription information.\nList maintainer: listmaster@linux.ie\n\n\n"}