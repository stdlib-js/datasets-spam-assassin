{"id":"01398","group":"easy-ham-2","checksum":{"type":"MD5","value":"169b51731fe569f42169ae8f948ec676"},"text":"From spambayes-bounces@python.org  Tue Nov 26 19:05:40 2002\nReturn-Path: <spambayes-bounces@python.org>\nDelivered-To: yyyy@localhost.spamassassin.taint.org\nReceived: from localhost (jalapeno [127.0.0.1])\n\tby jmason.org (Postfix) with ESMTP id AC79716F7B\n\tfor <jm@localhost>; Tue, 26 Nov 2002 19:00:15 +0000 (GMT)\nReceived: from jalapeno [127.0.0.1]\n\tby localhost with IMAP (fetchmail-5.9.0)\n\tfor jm@localhost (single-drop); Tue, 26 Nov 2002 19:00:15 +0000 (GMT)\nReceived: from mail.python.org (mail.python.org [12.155.117.29]) by\n    dogma.slashnull.org (8.11.6/8.11.6) with ESMTP id gAQGDpW10646 for\n    <jm@jmason.org>; Tue, 26 Nov 2002 16:13:51 GMT\nReceived: from localhost.localdomain ([127.0.0.1] helo=mail.python.org) by\n    mail.python.org with esmtp (Exim 4.05) id 18GiMq-00055L-00; Tue,\n    26 Nov 2002 11:15:20 -0500\nReceived: from [63.100.190.10] (helo=smtp.zope.com) by mail.python.org\n    with esmtp (Exim 4.05) id 18GiMl-00054Z-00 for spambayes@python.org;\n    Tue, 26 Nov 2002 11:15:15 -0500\nReceived: from slothrop.zope.com ([208.251.201.42]) by smtp.zope.com\n    (8.12.5/8.12.5) with ESMTP id gAQGSu7C010012; Tue, 26 Nov 2002 11:28:58\n    -0500\nMIME-Version: 1.0\nContent-Type: text/plain; charset=us-ascii\nContent-Transfer-Encoding: 7bit\nMessage-Id: <15843.40441.659922.991160@slothrop.zope.com>\nDate: Tue, 26 Nov 2002 11:14:49 -0500\nFrom: jeremy@alum.mit.edu (Jeremy Hylton)\nTo: skip@pobox.com\nSubject: Re: [Spambayes] Guidance re pickles versus DB for Outlook\nIn-Reply-To: <15843.39397.770235.412408@montanaro.dyndns.org>\nReferences: <LCEPIIGDJPKCOIHOBJEPGEGPHOAA.mhammond@skippinet.com.au>\n    <KFDCKI53GFCALK829664VTA5074OJYX.3de2d94d@riven>\n    <15842.62697.829412.348546@slothrop.zope.com>\n    <15843.39397.770235.412408@montanaro.dyndns.org>\nX-Mailer: VM 7.00 under 21.4 (patch 6) \"Common Lisp\" XEmacs Lucid\nX-Mailscanner: Found to be clean\nCc: Spambayes <spambayes@python.org>\nX-Beenthere: spambayes@python.org\nX-Mailman-Version: 2.1b5\nPrecedence: list\nReply-To: Jeremy Hylton <jeremy@alum.mit.edu>\nList-Id: Discussion list for Pythonic Bayesian classifier <spambayes.python.org>\nList-Help: <mailto:spambayes-request@python.org?subject=help>\nList-Post: <mailto:spambayes@python.org>\nList-Subscribe: <http://mail.python.org/mailman/listinfo/spambayes>,\n    <mailto:spambayes-request@python.org?subject=subscribe>\nList-Archive: <http://mail.python.org/pipermail/spambayes>\nList-Unsubscribe: <http://mail.python.org/mailman/listinfo/spambayes>,\n    <mailto:spambayes-request@python.org?subject=unsubscribe>\nSender: spambayes-bounces@python.org\nErrors-To: spambayes-bounces@python.org\n\n>>>>> \"SM\" == Skip Montanaro <skip@pobox.com> writes:\n\n  Jeremy> Put another way, I'd be interested to hear why you don't\n  Jeremy> want to use ZODB.\n\n  SM> Disclaimer: I'm not saying I don't want to use ZODB.  I'm\n  SM> offering some reasons why it might not be everyone's obvious\n  SM> choice.\n\nBut you're not saying you do want to use ZODB, so you're still part of\nthe problem <wink>.\n\n  SM> For most of us who have *any* experience with ZODB it's probably\n  SM> all indirect via Zope, so there are probably some inaccurate\n  SM> perceptions about it.  These thoughts that have come to my mind\n  SM> at one time or another:\n\n  SM> * How could a database from a company (Zope) whose sole business\n  SM>       is not databases be more reliable than a database from\n  SM>       organizations whose sole raison d'etre is databases\n  SM>       (Sleepycat, Postgres, MySQL, ...)?\n\nI don't think I could argue that ZODB is more reliable that\nBerkeleyDB.  It's true that we have fewer database experts and expend\nfewer resources working on database reliability.  On the other hand,\nBarry is nearly finished with a BerkeleyDB-based storage for ZODB.\n\nZODB is an object persistence tool that uses a database behind it.\nYou can use our FileStorage or you can use someone else's database,\nalthough BerkeleyDB is the best we can offer at the moment.  (It would\nbe really cool to do a Postgres storage...)\n\n  SM> * Dealing with Zope's monolithic system is frustrating to people\n  SM>       (like me) who are used to having files reside in\n  SM>       filesystems.  Some of that frustration probably carries\n  SM>       over to ZODB, though it's almost certainly not ZODB's\n  SM>       problem.\n\n\nThis sounds like a Zope complaint that doesn't have anything to do\nwith ZODB, but maybe I misunderstand you.  You don't have to store\nyour code in the database, although that will be mostly possible in\nZODB4.\n\nSeriously, ZODB stores object pickles in a database.  The storage\nlayer is free to manage those pickles however it likes.  FileStorage\nuses a single file.  Toby Dickenson's DirectoryStorage represents each\npickle as a separate file.\n\n  SM> * It seems to grow without bound, else why do I need to pack my\n  SM>       Data.fs file every now and then?\n\nIt grows without bound unless you pack it.  Why is that a problem? \nBerkeleyDB log files grow without bound, too.  Databases require some\ntending.  One possibility with FileStorage is to add an explicit\npack() call to update training operation.  We'd need to think\ncarefully about the performance impact.\n\n  SM> Also, there is the issue of availability.  While it's just an\n  SM> extra install, its use requires more than the usual Python\n  SM> install.  Having it in the core distribution would provide\n  SM> stronger assurances that it runs wherever Python runs (e.g.,\n  SM> does it run on MacOS 8 or 9, both of which I believe Jack still\n  SM> supports with his Mac installer?).\n\nI think we'd want a spambayes installer that packaged up spambayes,\npython, and zodb.\n\nJeremy\n\n\n_______________________________________________\nSpambayes mailing list\nSpambayes@python.org\nhttp://mail.python.org/mailman/listinfo/spambayes\n\n\n"}