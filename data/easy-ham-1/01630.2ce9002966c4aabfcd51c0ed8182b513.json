{"id":"01630","group":"easy-ham-1","checksum":{"type":"MD5","value":"2ce9002966c4aabfcd51c0ed8182b513"},"text":"From secprog-return-507-jm=jmason.org@securityfocus.com  Wed Sep 18 11:50:54 2002\nReturn-Path: <secprog-return-507-yyyy=spamassassin.taint.org@securityfocus.com>\nDelivered-To: yyyy@localhost.spamassassin.taint.org\nReceived: from localhost (jalapeno [127.0.0.1])\n\tby jmason.org (Postfix) with ESMTP id 4472916F03\n\tfor <jm@localhost>; Wed, 18 Sep 2002 11:50:53 +0100 (IST)\nReceived: from jalapeno [127.0.0.1]\n\tby localhost with IMAP (fetchmail-5.9.0)\n\tfor jm@localhost (single-drop); Wed, 18 Sep 2002 11:50:53 +0100 (IST)\nReceived: from outgoing.securityfocus.com ([205.206.231.27]) by\n    dogma.slashnull.org (8.11.6/8.11.6) with ESMTP id g8I4XsC12571 for\n    <jm@jmason.org>; Wed, 18 Sep 2002 05:33:54 +0100\nReceived: from unknown (unknown [205.206.231.19]) by\n    outgoing.securityfocus.com (Postfix) with QMQP id 9727BA30C2;\n    Tue, 17 Sep 2002 20:13:31 -0600 (MDT)\nMailing-List: contact secprog-help@securityfocus.com; run by ezmlm\nPrecedence: bulk\nList-Id: <secprog.list-id.securityfocus.com>\nList-Post: <mailto:secprog@securityfocus.com>\nList-Help: <mailto:secprog-help@securityfocus.com>\nList-Unsubscribe: <mailto:secprog-unsubscribe@securityfocus.com>\nList-Subscribe: <mailto:secprog-subscribe@securityfocus.com>\nDelivered-To: mailing list secprog@securityfocus.com\nDelivered-To: moderator for secprog@securityfocus.com\nReceived: (qmail 11785 invoked from network); 17 Sep 2002 15:39:18 -0000\nDate: Tue, 17 Sep 2002 14:51:23 +0200 (CEST)\nFrom: Allan Jensen <lists@snotboble.net>\nTo: Richard Bartlett <richard@hackerimmunity.com>\nCc: secprog@securityfocus.com\nSubject: Re: The risks of client systems writing to server registry\nIn-Reply-To: <20020905134739.1071.qmail@mail.securityfocus.com>\nMessage-Id: <Pine.LNX.4.44.0209171437060.19311-100000@plonku.snotboble.net>\nMIME-Version: 1.0\nContent-Type: TEXT/PLAIN; charset=US-ASCII\n\nOn 5 Sep 2002, Richard Bartlett wrote:\n\nRichard,\n\n> I have a customer who is developing some printer driver code to allow \n> custom driver settings (n-up, booklet, duplex etc.) to be saved up to the \n> server to be retrieved by other users.   The data is being written, by a \n> printer driver (using the logged on users authentication, to a registry \n> key) HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Environments\\Windows NT \n> x86\\Drivers\\Version-3\\{Driver Name}\\{Custom Key}\\Subkey).\n\nLet me get this straight; a registry key is loaded from the server onto \nthe client workstations who can modify it, then write it back onto the \nserver's own registry - which is not going to use it?\n\n> The question is, what are the security risks of allowing users to write \n> to this key?  The data is string data, in the form of delimited numeric \n> values.  This data is then retrieved by capable printer drivers and \n> interpreted.\n> \n> The risks as I see it are twofold;\n> (1) The risks of a compromise to the server using this registry key.  I \n> think this is unlikeley as the server itself does not use this data, only \n> client PC's do.  Unless someone knows a way to travel out of a hive up \n> the registry bypassing the permissions set using regedt32.\n\nWhat is the reason to write a registry key to a server if the server \nitself is not using it?\nI don't think you should worry too much about someone travelling out of \nthe hive, but again, I'm curious as to how the driver actually modifies \nthe keys on the server.\n\n> (2) The risks of a compromise to the client (far more likely).  This \n> would probably be by a malformed or extremely long string in the key \n> value, which would presumably lead to either DOS or system compromise by \n> buffer overflow on the client system.\n\nAnd if the client writes the key back onto the server, yes, there's wide \nopen for something nasty here.\nTwo other things spring to mind; \n1) If anyone can modify the key, how do you make sure that two users are \nnot overwriting the same key, thereby causing undesirable effects.\n2) If anyone have permissions to write to the key (and below), anyone can \ncreate thousands of extra keys under this key, thereby filling up the \nregistry. The result of such a thing is obvious.\n\nIf I got this all wrong, I'd be happy that you clarify a bit more and tell \nme where I might have misunderstood.\n\n\nMed venlig hilsen / Best regards,\n-Allan Jensen\n\nSi hoc signum legere potes, operis boni in rebus Latinus alacribus et \nfructuosis potiri potes!\n\n\n\n\n"}