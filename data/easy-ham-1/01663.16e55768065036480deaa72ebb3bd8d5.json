{"id":"01663","group":"easy-ham-1","checksum":{"type":"MD5","value":"16e55768065036480deaa72ebb3bd8d5"},"text":"Return-Path: whisper@oz.net\nDelivery-Date: Fri Sep  6 18:53:24 2002\nFrom: whisper@oz.net (David LeBlanc)\nDate: Fri, 6 Sep 2002 10:53:24 -0700\nSubject: [Spambayes] Deployment\nIn-Reply-To: <w53lm6fca8i.fsf@woozle.org>\nMessage-ID: <GCEDKONBLEFPPADDJCOECEGMENAA.whisper@oz.net>\n\nI think that when considering deployment, a solution that supports all\nPython platforms and not just the L|Unix crowd is desirable.\n\nMac and PC users are more apt to be using a commercial MUA that's unlikely\nto offer hooking ability (at least not easily). As mentioned elsewhere, even\nL|Unix users may find an MUA solution easier to use then getting it added to\ntheir MTA. (SysOps make programmers look like flaming liberals ;).)\n\nMy notion of a solution for Windows/Outlook has been, as Guido described, a\nclient-server. Client side does pop3/imap/mapi fetching (of which, I'm only\ngoing to implement pop3 initially) potentially on several hosts, spamhams\nthe incoming mail and puts it into one file per message (qmail style?). The\nMUA accesses this \"eThunk\" as a server to obtain all the ham. Spam is\nretained in the eThunk and a simple viewer would be used for manual\noversight on the spam for ultimate rejection (and training of spam filter)\nand the ham will go forward (after being used for training) on the next MUA\nfetch. eThunk would sit on a timer for 'always online' users, but I am not\nclear on how to support dialup users with this scheme.\n\nOutbound mail would use a direct path from the MUA to the MTA. Hopefully all\nMUAs can split the host fetch/send URL's\n\nIMO, end users are likely to be more intested in n-way classification. If\nthis is available, the \"simple viewer\" could be enhanced to support viewing\nvia folders and (at least for me) the Outlook nightmare is over - I would\nuse this as my only MUA. (N.B. according to my recent readings, the best\nn-way classifier uses something called a \"Support Vector Machine\" (SVM)\nwhich is 5-8% more accurate then Naive Bayes (NB) ).\n\nI wonder if the focus of spambayes ought not to be a classifier that leaves\nthe fetching and feeding of messages to auxillary code? That way, it could\nbe dropped into whatever harness that suited the user's situation.\n\nDavid LeBlanc\nSeattle, WA USA\n\n\n"}