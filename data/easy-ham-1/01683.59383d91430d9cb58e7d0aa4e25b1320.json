{"id":"01683","group":"easy-ham-1","checksum":{"type":"MD5","value":"59383d91430d9cb58e7d0aa4e25b1320"},"text":"Return-Path: tim.one@comcast.net\nDelivery-Date: Sat Sep  7 03:51:24 2002\nFrom: tim.one@comcast.net (Tim Peters)\nDate: Fri, 06 Sep 2002 22:51:24 -0400\nSubject: [Spambayes] understanding high false negative rate\nIn-Reply-To: <15737.16782.542869.368986@slothrop.zope.com>\nMessage-ID: <LNBBLJKPBEHFEDALKOLCIEKOBCAB.tim.one@comcast.net>\n\n[Jeremy]\n> The total collections are 1100 messages.  I trained with 1100/5\n> messages.\n\nWhile that's not a lot of training data, I picked random subsets of my\ncorpora and got much better behavior (this is rates.py output; f-p rate per\nrun in left column, f-n rate in right):\n\nTraining on Data/Ham/Set1 & Data/Spam/Set1 ... 220 hams & 220 spams\n      0.000   1.364\n      0.000   0.455\n      0.000   1.818\n      0.000   1.364\nTraining on Data/Ham/Set2 & Data/Spam/Set2 ... 220 hams & 220 spams\n      0.455   2.727\n      0.455   0.455\n      0.000   0.909\n      0.455   2.273\nTraining on Data/Ham/Set3 & Data/Spam/Set3 ... 220 hams & 220 spams\n      0.000   2.727\n      0.455   0.909\n      0.000   0.909\n      0.000   1.818\nTraining on Data/Ham/Set4 & Data/Spam/Set4 ... 220 hams & 220 spams\n      0.000   2.727\n      0.000   0.909\n      0.000   0.909\n      0.000   1.818\nTraining on Data/Ham/Set5 & Data/Spam/Set5 ... 220 hams & 220 spams\n      0.000   1.818\n      0.000   1.364\n      0.000   0.909\n      0.000   2.273\ntotal false pos 4 0.363636363636\ntotal false neg 29 2.63636363636\n\nAnother full run with another randomly chosen (but disjoint) 220 of each in\neach set was much the same.  The score distribution is also quite sharp:\n\nHam distribution for all runs:\n* = 74 items\n  0.00 4381 ************************************************************\n  2.50    3 *\n  5.00    3 *\n  7.50    1 *\n 10.00    0\n 12.50    0\n 15.00    1 *\n 17.50    1 *\n 20.00    1 *\n 22.50    0\n 25.00    0\n 27.50    0\n 30.00    1 *\n 32.50    0\n 35.00    0\n 37.50    0\n 40.00    1 *\n 42.50    0\n 45.00    0\n 47.50    0\n 50.00    0\n 52.50    0\n 55.00    0\n 57.50    1 *\n 60.00    0\n 62.50    0\n 65.00    0\n 67.50    1 *\n 70.00    0\n 72.50    0\n 75.00    0\n 77.50    0\n 80.00    0\n 82.50    0\n 85.00    0\n 87.50    1 *\n 90.00    0\n 92.50    2 *\n 95.00    0\n 97.50    2 *\n\nSpam distribution for all runs:\n* = 73 items\n  0.00   13 *\n  2.50    0\n  5.00    4 *\n  7.50    5 *\n 10.00    0\n 12.50    2 *\n 15.00    1 *\n 17.50    1 *\n 20.00    2 *\n 22.50    1 *\n 25.00    0\n 27.50    1 *\n 30.00    0\n 32.50    3 *\n 35.00    0\n 37.50    0\n 40.00    0\n 42.50    0\n 45.00    1 *\n 47.50    3 *\n 50.00   16 *\n 52.50    0\n 55.00    0\n 57.50    0\n 60.00    1 *\n 62.50    0\n 65.00    2 *\n 67.50    1 *\n 70.00    1 *\n 72.50    0\n 75.00    1 *\n 77.50    0\n 80.00    3 *\n 82.50    2 *\n 85.00    1 *\n 87.50    2 *\n 90.00    2 *\n 92.50    4 *\n 95.00    4 *\n 97.50 4323 ************************************************************\n\nIt's hard to say whether you need better ham or better spam, but I suspect\nbetter spam <wink>.  18 of the 30 most powerful discriminators here were\nHTML-related spam indicators; the top 10 overall were:\n\n        '<font' 266 0.99\n        'content-type:text/plain' 275 0.172932\n        '</body>' 312 0.99\n        '</html>' 329 0.99\n        'click' 334 0.99\n        '<html>' 335 0.99\n        'wrote:' 381 0.01\n        'skip:< 10' 398 0.99\n        'python' 428 0.01\n        'content-type:text/html' 454 0.99\n\nThe HTML tags come from non-multipart/alternative HTML messages, from which\nHTML tags aren't stripped, and there are lots of these in my spam sets.\n\nThat doesn't account for it, though.  If I strip HTML tags out of those too,\nthe rates are only a little worse:\n\nraining on Data/Ham/Set1 & Data/Spam/Set1 ... 220 hams & 220 spams\n     0.000   1.364\n     0.000   1.818\n     0.455   1.818\n     0.000   1.818\nraining on Data/Ham/Set2 & Data/Spam/Set2 ... 220 hams & 220 spams\n     0.000   1.364\n     0.455   1.818\n     0.455   0.909\n     0.000   1.818\nraining on Data/Ham/Set3 & Data/Spam/Set3 ... 220 hams & 220 spams\n     0.000   2.727\n     0.000   0.909\n     0.909   0.909\n     0.455   1.818\nraining on Data/Ham/Set4 & Data/Spam/Set4 ... 220 hams & 220 spams\n     0.000   1.818\n     0.000   0.909\n     0.455   0.909\n     0.000   1.364\nraining on Data/Ham/Set5 & Data/Spam/Set5 ... 220 hams & 220 spams\n     0.000   2.727\n     0.000   1.364\n     0.455   2.273\n     0.455   2.273\notal false pos 4 0.363636363636\notal false neg 34 3.09090909091\n\nThe 4th-strongest discriminator *still* finds another HTML clue, though!\n\n        'subject:Python' 164 0.01\n        'money' 169 0.99\n        'content-type:text/plain' 185 0.2\n        'charset:us-ascii' 191 0.127273\n        \"i'm\" 232 0.01\n        'content-type:text/html' 248 0.983607\n        '&nbsp;' 255 0.99\n        'wrote:' 372 0.01\n        'python' 431 0.01\n        'click' 519 0.99\n\nHeh.  I forgot all about &nbsp;.\n\n"}