{"id":"01719","group":"easy-ham-1","checksum":{"type":"MD5","value":"a401ddc61fc3d89fbaee70ea107a9956"},"text":"Return-Path: tim.one@comcast.net\nDelivery-Date: Sun Sep  8 19:28:02 2002\nFrom: tim.one@comcast.net (Tim Peters)\nDate: Sun, 08 Sep 2002 14:28:02 -0400\nSubject: [Spambayes] testing results\nIn-Reply-To: <20020908172113.GA26741@glacier.arctrix.com>\nMessage-ID: <LNBBLJKPBEHFEDALKOLCOEPHBCAB.tim.one@comcast.net>\n\n[Neil Schemenauer]\n> These results are from timtest.py.  I've got three sets of spam and ham\n> with about 500 messages in each set.  Here's what happens when I enable\n> my latest \"received\" header code:\n\nIf you've still got the summary files, please cvs up and try running cmp.py\nagain -- in the process of generalizing cmp.py, you managed to make it skip\nhalf the lines <wink>.  That is, if you've got N sets, you *should* get\nN**2-N pairs for each error rate.  You have 3 sets, so you should get 6\npairs of f-n rates and 6 pairs of f-p rates.\n\n>     false positive percentages\n>         0.187  0.187  tied\n>         0.749  0.562  won    -24.97%\n>         0.780  0.585  won    -25.00%\n>\n>     won   2 times\n>     tied  1 times\n>     lost  0 times\n>\n>     total unique fp went from 19 to 17\n>\n>     false negative percentages\n>         2.072  1.318  won    -36.39%\n>         2.448  1.318  won    -46.16%\n>         0.574  0.765  lost   +33.28%\n>\n>     won   2 times\n>     tied  0 times\n>     lost  1 times\n>\n>     total unique fn went from 43 to 28\n\nLooks promising!  Getting 6 lines of output for each block would give a\nclearer picture, of course.\n\n> Anthony's header counting code does not seem to help.\n\nIt helps my test data too much <wink/sigh>.\n\n"}