{"id":"01631","group":"easy-ham-1","checksum":{"type":"MD5","value":"2cba1b5addc12959348f0318a6cd9bee"},"text":"From secprog-return-508-jm=jmason.org@securityfocus.com  Fri Sep 20 11:28:44 2002\nReturn-Path: <secprog-return-508-yyyy=spamassassin.taint.org@securityfocus.com>\nDelivered-To: yyyy@localhost.spamassassin.taint.org\nReceived: from localhost (jalapeno [127.0.0.1])\n\tby jmason.org (Postfix) with ESMTP id 2E32016F03\n\tfor <jm@localhost>; Fri, 20 Sep 2002 11:28:42 +0100 (IST)\nReceived: from jalapeno [127.0.0.1]\n\tby localhost with IMAP (fetchmail-5.9.0)\n\tfor jm@localhost (single-drop); Fri, 20 Sep 2002 11:28:42 +0100 (IST)\nReceived: from outgoing.securityfocus.com (outgoing2.securityfocus.com\n    [205.206.231.26]) by dogma.slashnull.org (8.11.6/8.11.6) with ESMTP id\n    g8JNJ5C07887 for <jm@jmason.org>; Fri, 20 Sep 2002 00:19:06 +0100\nReceived: from lists.securityfocus.com (lists.securityfocus.com\n    [205.206.231.19]) by outgoing.securityfocus.com (Postfix) with QMQP id\n    43B578F293; Thu, 19 Sep 2002 16:23:04 -0600 (MDT)\nMailing-List: contact secprog-help@securityfocus.com; run by ezmlm\nPrecedence: bulk\nList-Id: <secprog.list-id.securityfocus.com>\nList-Post: <mailto:secprog@securityfocus.com>\nList-Help: <mailto:secprog-help@securityfocus.com>\nList-Unsubscribe: <mailto:secprog-unsubscribe@securityfocus.com>\nList-Subscribe: <mailto:secprog-subscribe@securityfocus.com>\nDelivered-To: mailing list secprog@securityfocus.com\nDelivered-To: moderator for secprog@securityfocus.com\nReceived: (qmail 2162 invoked from network); 19 Sep 2002 21:10:14 -0000\nFrom: \"Michael McKay\" <mmckay@iscubed.com>\nTo: \"'Bryan Feir'\" <bryan@sgl.crestech.ca>,\n\t<secprog@securityfocus.com>, <strange@nsk.yi.org>\nSubject: RE: Secure Sofware Key\nDate: Thu, 19 Sep 2002 14:44:22 -0700\nMessage-Id: <004401c26025$c4aa3260$01000001@iS3Inc>\nMIME-Version: 1.0\nContent-Type: text/plain; charset=\"US-ASCII\"\nContent-Transfer-Encoding: 7bit\nX-Priority: 3 (Normal)\nX-Msmail-Priority: Normal\nX-Mailer: Microsoft Outlook, Build 10.0.4024\nImportance: Normal\nX-Mimeole: Produced By Microsoft MimeOLE V6.00.2600.0000\nIn-Reply-To: <20020904151603.B1300@sgl.crestech.ca>\n\nBryan Feir [mailto:bryan@sgl.crestech.ca] wrote: \n\n>Of course, once one player key was broken, dealing with the rest became\n> a known plaintext attack, and the rest of the player keys went down\nlike\n> a row of dominos.\n\nThe actual follow-up to the Xing player break was more interesting than\nthat.  The mere knowledge of known plaintext (a corresponding input and\noutput) does not necessarily make it trivial to break a properly\ndesigned systems and/or algorithm. The primary reason it was easy for\nCSS is because the CSS key was only 40-bits, and thereby easy to break\nwith exhaustive search attacks.  It was only 40-bits (speculated)\nbecause of a misunderstanding of the government cryptography export\nrules at the time.\n\nEven more interesting, to me at least, was that soon after the Xing\nplayer break, people started studying the CSS algorithm itself.  They\nrapidly found serious design flaws which left the 40-bit CSS algorithm\nwith an actual strength of around 23-bits (from memory, and new attacks\nmight have further reduced the strength).  This is another great example\nshowing why proprietary cryptography algorithms should be viewed with\nthe greatest of suspicion.\n\n\nOn Tue, Sep 03, 2002 at 09:03:40PM -0400, Yannick Gingras wrote:\n> This make me wonder about the relative protection of smart cards.\nThey have \n> an internal procession unit around 4MHz.  Can we consider them as\ntrusted \n> hardware ?  \n\nYes and no.  You can put a limited amount of trust in a smart card.\nThere have been any number of very clever attacks against smartcards\n(Ross Anderson in the UK has documented quite a few of these), and\nsmartcard manufactures are usually one step behind these attacks.  A\nwell designed system assumes that a system smartcard will be completely\ncompromised at some point, giving an adversary all of the secrets\ncontained in the smartcard.  The cryptography industry has developed a\nvariety of techniques that can reduce the impact of a compromise,\nincluding unique keys per smartcard and forward security techniques.\n\n\nLuciano Rocha [strange@nsk.yi.org] wrote: \n\n> The problem is that that piece of hardware is trustworthy, but the\nrest of\n> the PC isn't, so a cracker just needs to simulate the lock/smart card,\nor\n> peek at the executable after the lock has been deactivated.\n\nGoing back to the original question, once the encrypted material goes\noutside the trusted hardware, it is impossible to \"unbreakably\" protect\nit.  There may be some mitigation steps you can take, such as the SDMI\nwatermarking, but most schemes to date have been easily broken.  \n\nAnother consideration is the value of what you are trying to protect.\nWhile there is no such thing as unbreakable, adding more cost (both in\nterms of price and hassle-factor) can greatly improve the protection.\nSince you are talking about the use of standard PC workstations, I\npresume what you are trying to protect is not THAT valuable.  I'm afraid\nmost security measures don't come for free.\n\n\nMichael McKay \nDirector of Software Development \nmmckay@iscubed.com \n\n  Information Security Systems & Services Inc. \n  19925 Stevens Creek Blvd. Cupertino, CA 95014 \n  Phone: 408.725.7136  x 4138    Fax: 408.973.7239   www.iscubed.com\n\n\n"}