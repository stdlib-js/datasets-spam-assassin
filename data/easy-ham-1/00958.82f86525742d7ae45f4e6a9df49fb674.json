{"id":"00958","group":"easy-ham-1","checksum":{"type":"MD5","value":"82f86525742d7ae45f4e6a9df49fb674"},"text":"From exmh-workers-admin@redhat.com  Wed Aug 28 10:46:53 2002\nReturn-Path: <exmh-workers-admin@spamassassin.taint.org>\nDelivered-To: yyyy@localhost.netnoteinc.com\nReceived: from localhost (localhost [127.0.0.1])\n\tby phobos.labs.netnoteinc.com (Postfix) with ESMTP id B421644159\n\tfor <jm@localhost>; Wed, 28 Aug 2002 05:46:25 -0400 (EDT)\nReceived: from phobos [127.0.0.1]\n\tby localhost with IMAP (fetchmail-5.9.0)\n\tfor jm@localhost (single-drop); Wed, 28 Aug 2002 10:46:25 +0100 (IST)\nReceived: from listman.spamassassin.taint.org (listman.spamassassin.taint.org [66.187.233.211]) by\n    dogma.slashnull.org (8.11.6/8.11.6) with ESMTP id g7S7fqZ15069 for\n    <jm-exmh@jmason.org>; Wed, 28 Aug 2002 08:41:52 +0100\nReceived: from listman.spamassassin.taint.org (localhost.localdomain [127.0.0.1]) by\n    listman.redhat.com (Postfix) with ESMTP id B745A3EE66; Wed, 28 Aug 2002\n    03:42:02 -0400 (EDT)\nDelivered-To: exmh-workers@listman.spamassassin.taint.org\nReceived: from int-mx1.corp.spamassassin.taint.org (int-mx1.corp.spamassassin.taint.org\n    [172.16.52.254]) by listman.redhat.com (Postfix) with ESMTP id 085C43F409\n    for <exmh-workers@listman.redhat.com>; Wed, 28 Aug 2002 03:41:16 -0400\n    (EDT)\nReceived: (from mail@localhost) by int-mx1.corp.spamassassin.taint.org (8.11.6/8.11.6)\n    id g7S7fCQ19268 for exmh-workers@listman.redhat.com; Wed, 28 Aug 2002\n    03:41:12 -0400\nReceived: from mx1.spamassassin.taint.org (mx1.spamassassin.taint.org [172.16.48.31]) by\n    int-mx1.corp.redhat.com (8.11.6/8.11.6) with SMTP id g7S7fCY19264 for\n    <exmh-workers@redhat.com>; Wed, 28 Aug 2002 03:41:12 -0400\nReceived: from ratree.psu.ac.th ([202.28.97.6]) by mx1.spamassassin.taint.org\n    (8.11.6/8.11.6) with SMTP id g7S7Q6l04801 for <exmh-workers@redhat.com>;\n    Wed, 28 Aug 2002 03:26:07 -0400\nReceived: from delta.cs.mu.OZ.AU (dhcp253.cc.psu.ac.th [192.168.2.253]) by\n    ratree.psu.ac.th (8.11.6/8.11.6) with ESMTP id g7S7eOU14972;\n    Wed, 28 Aug 2002 14:40:24 +0700 (ICT)\nReceived: from munnari.OZ.AU (localhost [127.0.0.1]) by delta.cs.mu.OZ.AU\n    (8.11.6/8.11.6) with ESMTP id g7S6pLW18368; Wed, 28 Aug 2002 13:51:21\n    +0700 (ICT)\nFrom: Robert Elz <kre@munnari.OZ.AU>\nTo: Brent Welch <welch@panasas.com>\nCc: Chris Garrigues <cwg-dated-1030804078.e8b0d5@DeepEddy.Com>,\n\texmh-workers@redhat.com\nSubject: Re: Anolther sequence related traceback\nIn-Reply-To: <200208280108.VAA30178@blackcomb.panasas.com>\nReferences: <200208280108.VAA30178@blackcomb.panasas.com>\n    <1030372078.11075.TMDA@deepeddy.vircio.com>\n    <1030118301.3993.TMDA@deepeddy.vircio.com>\n    <16323.1030043119@munnari.OZ.AU> <6853.1030345218@munnari.OZ.AU>\n    <12683.1030438738@munnari.OZ.AU>\nMIME-Version: 1.0\nContent-Type: text/plain; charset=us-ascii\nMessage-Id: <18366.1030517481@munnari.OZ.AU>\nX-Loop: exmh-workers@spamassassin.taint.org\nSender: exmh-workers-admin@spamassassin.taint.org\nErrors-To: exmh-workers-admin@spamassassin.taint.org\nX-Beenthere: exmh-workers@spamassassin.taint.org\nX-Mailman-Version: 2.0.1\nPrecedence: bulk\nList-Help: <mailto:exmh-workers-request@spamassassin.taint.org?subject=help>\nList-Post: <mailto:exmh-workers@spamassassin.taint.org>\nList-Subscribe: <https://listman.spamassassin.taint.org/mailman/listinfo/exmh-workers>,\n    <mailto:exmh-workers-request@redhat.com?subject=subscribe>\nList-Id: Discussion list for EXMH developers <exmh-workers.spamassassin.taint.org>\nList-Unsubscribe: <https://listman.spamassassin.taint.org/mailman/listinfo/exmh-workers>,\n    <mailto:exmh-workers-request@redhat.com?subject=unsubscribe>\nList-Archive: <https://listman.spamassassin.taint.org/mailman/private/exmh-workers/>\nDate: Wed, 28 Aug 2002 13:51:21 +0700\n\nI have some patches that seem to fix/avoid this problem now.   (It is\namazing what one can achieve when mains power fails, long enough for\nUPS's to run out, and all that is left operational is the laptop and\nits battery supply...)\n\nFirst, I put in some defensive code into the area where the problem was\noccurring, so that if exmh is attempting (for any reason) to expand a\nsequence that isn't either a number, or a range of numbers (or a list of\nsuch things) it will simply ignore the trash, rather than giving a traceback.\nThis one solves the initial problem:\n\n--- mh.tcl.WAS\tThu Aug 22 21:15:06 2002\n+++ mh.tcl\tWed Aug 28 12:39:11 2002\n@@ -487,6 +487,10 @@\n     set seq {}\n     set rseq {}\n     foreach range [split [string trim $sequence]] {\n+\tif ![regexp {^[0-9]+(-[0-9]+)?$} $range] {\n+\t    # just ignore anything bogus\n+\t    continue;\n+\t}\n \tset parts [split [string trim $range] -]\n \tif {[llength $parts] == 1} {\n \t    lappend seq $parts\n\n\nThat is amending proc MhSeqExpand which is where the error was occurring\nbefore (the code assumes that $range is either NNN or NNN-MMM so we should\nprobably make sure that's true - issue an error instead of just \"continue\"\nif you like, but I don't think an error is needed).\n\nBut that just allowed me to create a similar problem, in another place,\nby typing \"NNN-\" ... and rather than continue to fight fires like this,\nI thought I should think more about Brent's suggestion.   But rather than\nhave the selection code actually validate the input, which would mean it\nwould have to know what is to be valid, I decided that the right thing to\ndo is just to ignore any errors caused by invalid input, so I just stuck\na \"catch\" around the MsgShow that is processing the nonsense that the\nuser has typed.\n\nThis way, any later expansion to what MsgShow treats as legal (maybe\nallowing a sequence name, like \"prev\" or \"next\", or anything else can\nbe handled just there, without someone needing to remember that they have\nto go fix the selection processing code to allow it.\n\nBut, while I was playing there, I noticed something I never new before.\nIf you type \"66+\" the \"66\" changes to \"67\" (and so on, for each + that\nis typed).   I suspect that's perhaps an artifact of \"+ is bound to a\ndifferent function so it can be used as a toggle between changing the\ncurrent and the target folder, but it has to mean something if the current\ninput mode is a message number, so let it mean...\", but now I found it,\nI think its nice.    But if we can type 66+ why not 66- as well?  That\nkind of limitation bugs me, so I fixed it.\n\nAnd then I wondered about folders with names containing '+' - the special\nuse of + as the toggle character means there's no way to type those from\nthe keyboard.   So I fixed that as well.   This makes two different\nrestrictions - there's no way to type a folder name that has a name\nbeginning with '+' (but such a thing in MH would be a pain to use anyway,\nso I doubt this will bother anyone), and it is now only possible to\ntoggle between typing the current & target folder name when the name\nbeing typed is empty.   I'm less happy about that part, but I think I\ncan live with it in order to allow folder names with +'s in them to\nexist and be typed.\n\nThen, since I was there anyway, I decided to do something about another\nfeature that has always bugged me.   In \"normal\" keyboard mode, 's' is\nthe key used to show a message.    But if you've just typed 123, and\nthe FTOC is highlighting 123 as the current message, and you want to now\nshow that message, you can't type 's', you have to type \\r instead.\nSo I \"fixed\" this one as well.   \"Fixed\" here is in quotes, as it assumes\nthat the keybinding for MsgShow is 's', if you change that to something\nelse, it will remain 's' in here.   I don't know enough tk/tcl to have it\ndiscover what key is bound to a function in the external world in order\nto bind the same one here.   \\r continues to work of course.\n\nAnd now I got started in fixing irritants in this code, I also made it\nclear the status line if you abort message/folder entry mode (^C or ^G).\nPreviously it used to leave the prompt sitting there until the next\nmessage appeared, which made it less than obvious that the keyboard had\nreverted to its usual bindings.\n\nIn any case, what follows is the patch that does all of that.   I believe\nthat if you apply this, then the one above is probably not needed, the\n\"catch\" around the \"MsgShow\" will hide the problem (I don't think we really\nneed to fix Brent's way of invoking it).   Or include it anyway, just\nfor completeness (I haven't run an exmh with the following patch, but not\nthe previous one, so I don't know for sure that all will be OK then).\n\nkre\n\n--- select.tcl.WAS\tThu Aug 22 21:15:07 2002\n+++ select.tcl\tWed Aug 28 13:36:17 2002\n@@ -49,9 +49,11 @@\n     bindtags $w [list $w Entry]\n     bind $w <Any-Key>\t{SelectTypein %W %A}\n     bind $w <Key-plus>\t{SelectToggle %W }\n+    bind $w <Key-minus>\t{SelectPrev %W }\n     bind $w <space>\t{SelectComplete %W}\n     bind $w <Tab>\t{SelectComplete %W}\n     bind $w <Return>\t{SelectReturn %W}\n+    bind $w <Key-s>\t{SelectReturn %W %A}\n     bind $w <BackSpace>\t{SelectBackSpace %W}\n     bind $w <Control-h>\t{SelectBackSpace %W}\n     bind $w <Delete>\t{SelectBackSpace %W}\n@@ -72,7 +74,7 @@\n     append select(sel) $a\n     Exmh_Status \"$select(prompt) $select(sel)\"\n     if ![info exists select(folder)] {\n-\tMsg_Change $select(sel) noshow\n+\tcatch { Msg_Change $select(sel) noshow }\n     }\n }\n proc SelectBackSpace { w } {\n@@ -91,6 +93,10 @@\n proc SelectToggle {w} {\n     global select\n     if [info exists select(folder)] {\n+\tif {$select(sel) != \"\"} {\n+\t    SelectTypein $w +\n+\t    return\n+\t}\n \tset select(toggle) [list [lindex $select(toggle) 1] [lindex $select(toggle) 0]]\n \tset select(prompt) \"[lindex $select(toggle) 0] Folder:\"\n     } else {\n@@ -101,6 +107,18 @@\n     }\n     Exmh_Status \"$select(prompt) $select(sel)\"\n }\n+proc SelectPrev {w} {\n+    global select\n+    if [info exists select(folder)] {\n+\tSelectTypein $w \"-\"\n+    } else {\n+\tcatch {\n+\t    incr select(sel) -1\n+\t    Msg_Change $select(sel) noshow\n+\t}\n+        Exmh_Status \"$select(prompt) $select(sel)\"\n+    }\n+}\n proc SelectComplete { w } {\n     global select\n     if [info exists select(folder)] {\n@@ -126,9 +144,13 @@\n \tExmh_Status \"$select(prompt) $select(sel)\"\n     }\n }\n-proc SelectReturn { w } {\n+proc SelectReturn { w {a {}} } {\n     global select\n     if [info exists select(folder)] {\n+\tif {$a != {}} {\n+\t    SelectTypein $w $a\n+\t    return\n+\t}\n \tif [info exists select(match)] {\n \t    set select(sel) $select(match)\n \t    unset select(match)\n@@ -151,6 +173,7 @@\n \tunset select(folder)\n     }\n     $select(entry) configure -state disabled\n+    Exmh_Status \"\"\n     Exmh_Focus\n }\n proc SelectClear { w } {\n\n\n\n\n_______________________________________________\nExmh-workers mailing list\nExmh-workers@redhat.com\nhttps://listman.redhat.com/mailman/listinfo/exmh-workers\n\n"}