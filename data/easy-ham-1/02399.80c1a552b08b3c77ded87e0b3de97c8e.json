{"id":"02399","group":"easy-ham-1","checksum":{"type":"MD5","value":"80c1a552b08b3c77ded87e0b3de97c8e"},"text":"From rssfeeds@jmason.org  Wed Oct  9 10:53:05 2002\nReturn-Path: <rssfeeds@spamassassin.taint.org>\nDelivered-To: yyyy@localhost.spamassassin.taint.org\nReceived: from localhost (jalapeno [127.0.0.1])\n\tby jmason.org (Postfix) with ESMTP id DF30316F79\n\tfor <jm@localhost>; Wed,  9 Oct 2002 10:52:05 +0100 (IST)\nReceived: from jalapeno [127.0.0.1]\n\tby localhost with IMAP (fetchmail-5.9.0)\n\tfor jm@localhost (single-drop); Wed, 09 Oct 2002 10:52:05 +0100 (IST)\nReceived: from dogma.slashnull.org (localhost [127.0.0.1]) by\n    dogma.slashnull.org (8.11.6/8.11.6) with ESMTP id g9980eK25205 for\n    <jm@jmason.org>; Wed, 9 Oct 2002 09:00:40 +0100\nMessage-Id: <200210090800.g9980eK25205@dogma.slashnull.org>\nTo: yyyy@spamassassin.taint.org\nFrom: joelonsoftware <rssfeeds@spamassassin.taint.org>\nSubject: Feedback from my posting about FogBUGZ Setup fell into four\n    categories. *\nDate: Wed, 09 Oct 2002 08:00:39 -0000\nContent-Type: text/plain; encoding=utf-8\n\nURL: http://www.joelonsoftware.com/news/20021008.html\nDate: Not supplied\n\nFeedback from my posting[1] about FogBUGZ[2] Setup fell into four categories. \n\n*\"Why make Setup reversable? Instead you should collect all the information \nfrom the user and make all the changes in one batch at the end.\"* There are a \ncouple of things to understand here. First of all, even if you do everything in \none batch at the end, there's always a possibility that some step in the middle \nof the batch will fail, and in that case, a well-behaved setup program will \nback out the steps that were already done. There are well over 100 error \nmessages in the string table for FogBUGZ Setup so the number of things that can \nfail is not insignificant. \n\nSecond, it's not nice to tell people about an error in their input three pages \nafter they made the mistake. For example, early in the FogBUGZ setup process we \nprompt you to create an account for FogBUGZ to use: \n\n[IMG: http://www.joelonsoftware.com/pictures/setupNewAcct.gif (FogBUGZ Setup \nScreenshot)] \n\nThe account creation could fail for a myriad of reasons, none of which can be \npredicted before trying to create the account. For example, the password might \nnot conform to the system password policy. And different national versions of \nWindows NT have different rules about accented letters in passwords (betcha \ndidn't know that!). It's better to tell the user about this problem right away \nso they can correct their input rather than having a message come up during the \nlong install process later, forcing the user to back up and fix it. And even if \nyou force the user to back up and fix it, you still have to undo the first part \nof the work that you did before creating the account, otherwise you've left \ntheir system in an indeterminate state. \n\nIn any case I need to write code to create the account and delete the account \nin case something later fails; I might as well call that code on this page of \nthe wizard where I can display a useful error message. \n\nAnd what are the kinds of things that need to be reversable? Well, in order to \nupgrade FogBUGZ without requiring a reboot (and we _never, ever _require a \nreboot), we have to shut down a couple of processes that might have been \nkeeping FogBUGZ files pinned down, such as IIS (Microsoft's web server). So \npart one of the batch is \"Stop IIS.\" Now if part 2 fails for some reason, it \nwould be _extremely_ rude to leave IIS not running. And anyway, it's not like I \ndon't need to write the code for \"Start IIS\" for the end of the batch. So the \ncode to rollback \"Stop IIS\" is already written. No big deal, I just need to \ncall it at the right place. \n\nI think one reason that people think you should \"gather all the info and then \ndo all the work\" is because with very large installation programs that are very \nslow, this is a polite way to waste less of the user's time. Indeed even \nFogBUGZ setup does 95% of its work at the very end. But the \"create account\" \noperation is so fast, that principle simply doesn't apply here. Even our 95% of \nthe work phase takes well under a minute, most of which is spent waiting for \nIIS to stop and start. \n\n*\"Why did you use VC++/MFC? Surely an advanced intelligence such as yourself \nhas admitted by now that Delphi[3] is more productive.\"* First of all, leave \nyour language religious fanaticism at the Usenet door. Somehow I managed \nto figure out_ in high school_ that language advocacy and religious \narguments are unbelievably boring.  \n\nSecondly, even if Delphi were more productive, the only pertinent question, \nsince I am writing the code, is _what is more productive for Joel Spolsky_. And \nI don't know Delphi at all, but I know Win32, MFC, and VC++ _really, really \nwell_. So while I might not outcode a good Delphi programmer, I would \ndefinitely outcode a completely inexperienced Delphi programmer (which is me), \ncertainly over a short 4 week project. Third, many of the things I needed to do \nin this setup program are things like \"grant the Logon as Service privilege to \nan account.\" This is rare enough that the only way to find out how to do this \nis to search the Microsoft knowlege base and the web in general. When you \nsearch the web in general for how to do fancy things with Windows NT, what you \nfind is about 75% C code, maybe 20% VB code, and 5% everything else. Yes, I \nknow, I could translate the C code into Delphi (assuming I was a sophisticated \nDelphi programmer, not a completely inexperienced Delphi programmer), but that \ncosts as much productivity as I would supposedly gain from your supposedly more \nproductive programming language. And fourth, I already had about 30% of the \ncode I needed for Setup in MFC format: from FogBUGZ 2.0 Setup, and a library \nI've been using for years to make wizards. \n\n*\"Why make Setup at all? You already have your customers' money. Good Setup \nprograms don't increase sales.\"* This was actually the smartest question and \nmade me think the hardest. I came up with three reasons: \n\n- Decreased tech support cost. This setup program will pay for itself over the \nlife of the code. \n- Delight my customers. When I'm trying to get them to upgrade to 4.0, I want \nthem to remember how painless the 3.0 installation was, so they won't hesitate \nbecause they are afraid to upgrade. I'm still using an old version of \nSpamAssassin that is becoming increasingly ineffective, even though I know the \nnew version is much better, because I just can't bear the thought of another \nmorning wasted. The very memory of the first SpamAssassin installation -- all \nthe little SSH windows, some su'ed, trying to scroll through man pages and \nGoogle Groups, accidentally hitting Ctrl+Z in Emacs to undo and having it \nsuspend, trying to guess why we can't get the MTA to run procmail, sorry it's \ntoo much. If SpamAssassin was making money off of upgraders they would have \nlost my business because they don't have a SETUP program. \n- Win reviews. Software reviewers always cast about for some kind of \nstandardized way to rate software, even when they are comparing apples and \noranges and planets and 17th century philosophers. They always have a \nmeaningless list of things to review which can be applied to PC games, \nmainframe databases, web site auction software, and DNA sequencing \nsoftware. And Setup is always on their list. A single flaw in setup is \nguaranteed to be mentioned in every review because every reviewer will see it \nand say \"Aha!\"\n\n\n*\"How can we make WISE[4] better?\" *Kudos to the product manager of WISE \nInstallation System for calling me up and listening to my litany of all the \nreasons his product wasn't adequate for typical IIS/ASP/SQL applications.\n\n[1] http://www.joelonsoftware.com/news/20021002.html\n[2] http://www.fogcreek.com/FogBUGZ\n[3] http://discuss.fogcreek.com/delphiquestions\n[4] http://www.wise.com\n\n\n"}