{"id":"01646","group":"easy-ham-1","checksum":{"type":"MD5","value":"6943600e0de67c472ee13c9f14345e0f"},"text":"Return-Path: tim.one@comcast.net\nDelivery-Date: Fri Sep  6 15:59:38 2002\nFrom: tim.one@comcast.net (Tim Peters)\nDate: Fri, 06 Sep 2002 10:59:38 -0400\nSubject: [Spambayes] test sets?\nIn-Reply-To: <200209060759.g867xcV03853@localhost.localdomain>\nMessage-ID: <LNBBLJKPBEHFEDALKOLCEEHFBCAB.tim.one@comcast.net>\n\n[Anthony Baxter]\n> I've got a test set here that's the last 3 and a bit years email to\n> info@ekit.com and info@ekno.com - it's a really ugly set of 20,000+\n> messages, currently broken into 7,000 spam, 9,000 ham, 9,000 currently\n> unclassified. These addresses are all over the 70-some different\n> ekit/ekno/ISIConnect websites, so they get a LOT of spam.\n>\n> As well as the usual spam, it also has customers complaining about\n> credit card charges, it has people interested in the service and\n> asking questions about long distance rates, &c &c &c. Lots and lots\n> of \"commercial\" speech, in other words. Stuff that SA gets pretty\n> badly wrong.\n\nCan this corpus be shared?  I suppose not.\n\n> I'm currently mangling it by feeding all parts (text, html, whatever\n> else :) into the filters, as well as both a selected number of headers\n> (to, from, content-type, x-mailer), and also a list of (header,\n> count_of_header). This is showing up some nice stuff - e.g. the\n> X-uidl that stoopid spammers blindly copy into their messages.\n\nIf we ever <wink> have a shared corpus, an easy refactoring of timtest\nshould allow to plug in different tokenizers.  I've only made three changes\nto Graham's algorithm so far (well, I've made dozens -- only three survived\ntesting as proven winners), all the rest has been refining the tokenization\nto provide better clues.\n\n> I did have Received in there, but it's out for the moment, as it causes\n> rates to drop.\n\nThat's ambiguous.  Accuracy rates or error rates, ham or spam rates?\n\n> I'm also stripping out HTML tags, except for href=\"\" and src=\"\" - there's\n> so so much goodness in them (note that I'm only keeping the contents of\n> the attributes).\n\nMining embedded http/https/ftp thingies cut the false negative rate in half\nin my tests (not keying off href, just scanning for anything that \"looked\nlike\" one); that was the single biggest f-n improvement I've seen.  It\ndidn't change the false positive rate.  So you know whether src added\nadditional power, or did you do both at once?\n\n"}