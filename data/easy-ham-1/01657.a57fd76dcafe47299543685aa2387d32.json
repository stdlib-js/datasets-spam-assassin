{"id":"01657","group":"easy-ham-1","checksum":{"type":"MD5","value":"a57fd76dcafe47299543685aa2387d32"},"text":"Return-Path: jeremy@alum.mit.edu\nDelivery-Date: Fri Sep  6 17:28:09 2002\nFrom: jeremy@alum.mit.edu (Jeremy Hylton)\nDate: Fri, 6 Sep 2002 12:28:09 -0400\nSubject: [Spambayes] Deployment\nIn-Reply-To: <200209061431.g86EVM114413@pcp02138704pcs.reston01.va.comcast.net>\nReferences: <200209061431.g86EVM114413@pcp02138704pcs.reston01.va.comcast.net>\nMessage-ID: <15736.55193.38098.486459@slothrop.zope.com>\n\nI think one step towards deployment is creating a re-usable tokenizer\nfor mail messages.  The current codebase doesn't expose an easy-to-use\nor easy-to-customize tokenizer.\n\nThe timtest module seems to contain an enormous body of practical\nknowledge about how to parse mail messages, but the module wasn't\ndesigned for re-use.  I'd like to see a module that can take a single\nmessage or a collection of messages and tokenize each one.\n\nI'd like to see the tokenize by customizable, too.  Tim had to exclude\nsome headers from his test data, because there were particular biases\nin the test data.  If other people have test data without those\nbiases, they ought to be able to customize the tokenizer to include\nthem or exclude others.\n\nJeremy\n\n"}