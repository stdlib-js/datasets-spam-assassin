{"id":"02378","group":"easy-ham-1","checksum":{"type":"MD5","value":"ff357ba03232ac47ae4cbdf1a770cfc4"},"text":"From rssfeeds@jmason.org  Wed Oct  9 10:52:39 2002\nReturn-Path: <rssfeeds@spamassassin.taint.org>\nDelivered-To: yyyy@localhost.spamassassin.taint.org\nReceived: from localhost (jalapeno [127.0.0.1])\n\tby jmason.org (Postfix) with ESMTP id 3C09716F69\n\tfor <jm@localhost>; Wed,  9 Oct 2002 10:51:38 +0100 (IST)\nReceived: from jalapeno [127.0.0.1]\n\tby localhost with IMAP (fetchmail-5.9.0)\n\tfor jm@localhost (single-drop); Wed, 09 Oct 2002 10:51:38 +0100 (IST)\nReceived: from dogma.slashnull.org (localhost [127.0.0.1]) by\n    dogma.slashnull.org (8.11.6/8.11.6) with ESMTP id g9980GK25148 for\n    <jm@jmason.org>; Wed, 9 Oct 2002 09:00:17 +0100\nMessage-Id: <200210090800.g9980GK25148@dogma.slashnull.org>\nTo: yyyy@spamassassin.taint.org\nFrom: diveintomark <rssfeeds@spamassassin.taint.org>\nSubject: In praise of evolvable formats\nDate: Wed, 09 Oct 2002 08:00:15 -0000\nContent-Type: text/plain; encoding=utf-8\n\nURL: http://diveintomark.org/archives/2002/10/08.html#in_praise_of_evolvable_formats\nDate: 2002-10-08T12:28:10-05:00\n\n_Clay Shirky_: In Praise of Evolvable Systems[1]. This entire article could be \nrewritten to explain RSS. In fact, let's do that. \n\nIf it were April Fool's Day, the Net's only official holiday, and you wanted to \ndesign a &#8220;novelty format&#8221; to slip by the W3C as a joke, it might \nlook something like RSS 0.9x/2.0: \n\n- It would specify limits on data values, then remove them, then specify \nrequired elements, then make them optional, thus silently breaking an unknown \nnumber of parsers around the world. \n- It would encourage use of entity-encoded HTML in its most important element, \nthus ensuring both security risks and unpredictable display for the end user. \n- It would ignore years of standards work in other fields, committing such \negregious sins as defining a guid element that wasn't a GUID, and using an \nobsolete date format that couldn't easily be sorted by date. \n- Its primary method of extensibility would be to add new elements to the core \nnamespace without telling anyone or documenting them, thus making it wholely \nresistant to DTD, schema, or validation of any kind. \n- After years of worldwide deployment, it would completely reverse its \nadd-whatever-you-want extensibility rules in favor of namespaces, which the \nspec would neither define nor elaborate on. \n- After adopting namespaces, it would fail to deprecate any existing elements \nsemantically identical to namespace elements already in wide use. It would also \nfail to provide precedence rules in cases where a document attempted to say the \nsame thing in two different ways, thus ensuring mass confusion among producers \nand inconsistent behavior across consumers. \n\nRSS 0.9x and 2.0 are the Whoopee Cushion and Joy Buzzer of syndication formats. \nFor anyone who has tried to accomplish anything serious with metadata, it's \npretty obvious that of the various implementations of a worldwide syndication \nformat, we have the worst one possible. \n\nExcept, of course, for all the others. \n\nThe problem with that list of RSS deficiencies is that it is also a list of \nnecessities&#8212;RSS has flourished in a way that no other syndication format \nhas, not despite many of these qualities but because of them. The very \nweaknesses that make RSS so infuriating to serious practitioners also make it \npossible in the first place. \n\n- Removing length limitations on description and making title optional opened \nup RSS to a whole new category of producer: the weblogger. \n- Allowing encoded HTML in description let publishers reuse both their existing \ncontent and the existing RSS infrastructure, without requiring them to produce \nvalid XHTML (which could be embedded directly into an XML document). Social \nmores, rather than technical rules, prevent producers from intentionally \nintroducing security risks through malicious script tags or unpredictable \ndisplay through unclosed HTML elements. \n- Few publishing tools can produce real conforming GUIDs, and it doesn't \nmatter, because virtually all RSS parsers are written in high level languages \nwhere handling strings is more efficient than converting strings to bytecodes \nand handling bytecodes. As for dates, by convention an RSS document is laid out \nin reverse chronological order, and no one seems to be clamoring for more \nflexibility. \n\nFurthermore, its almost babyish XML syntax, so far from any serious \ncomputational framework (Where are the namespaces? Where is the Document Type \nDescription? Why is the aggregators' enforcement of conformity so lax?), made \nit possible for anyone wanting an RSS feed to write one. The effects of this \nease of implementation only become clear when you compare it to the attempts \nover the years to &#8220;do RSS right&#8221;&#8212;most notably RSS 1.0 in the \nyear 2000. RSS 1.0 had three main benefits: \n\n- Backward compatible with RSS 0.90, which was never widely deployed, and which \nfell into obscurity as soon as (the much simpler) RSS 0.91 was introduced. \n- Based on RDF (specifically a serialization called RDF/XML), a spec which, at \nthe time and to this day, continues to change or threaten to change. Two years \nlater, there are no major languages or development platforms that ship with \nparsers to consume RDF, although many (Perl, Python, .NET) have third-party RDF \nparsers in various states of development and conformance. (The release version \nis generally out of date; CVS access is recommended. You get the idea.) \nMeanwhile, RDF/XML production tools are so inconsistent that even RDF experts \nrecommend not using RDF tools to produce an RSS 1.0 feed if you want it to \nactually be read by any major RSS aggregator. Despite the two-year-old promise \nof better tools[2], it is now the year 2002, and I built my RSS 1.0 \nfeed&#8212;in the most sophisticated personal publishing system in the \nworld&#8212;by manually typing a mishmash of template tags and angle brackets \ninto a TEXTAREA of an HTML form. \n- Extensible through namespaces, which, as mentioned above, have been \nhaphazardly and poorly incorporated into RSS 2.0, where they appear to be \nflourishing. \n\nEvolvable formats&#8212;those that proceed by being adapted and extended in a \nthousand small ways&#8212;have three main characteristics that are germane to \ntheir eventual victories over strong, centrally designed formats. \n\n- Only solutions that produce partial results with imperfect tools can succeed. \nMy RSS feed is an XML document produced by a template that I built in a \nTEXTAREA, and consumed by hundreds of parsers around the world that know \nnothing of XML and hack apart my feed with regular expressions. The world is \nlittered with formats that would have worked if only everyone had better tools. \nIf everyone in the world had a perfect RDF parser at their disposal, it would \nbe trivial to produce and consume all the world's metadata in RDF. Without such \nperfect tools, both production and consumption instantly become nightmares. \nThere is no middle ground. \n- What is, is wrong. Because evolvable formats have always been adapted to \nearlier conditions and are always being further adapted to present conditions, \nthey are always behind the times. RSS was being stretched with long \ndescriptions, optional titles, and entity-encoded HTML even before such \npractices were codified in the spec, and long before all consumers could handle \nthem. No evolving format is ever perfectly in sync with the challenges it \nfaces. \n- Finally, Orgel's Rule, named for the evolutionary biologist Leslie \nOrgel&#8212;&#8220;Evolution is cleverer than you are&#8221;. As with the list \nof RSS's obvious deficiencies above, it is easy to point out what is wrong with \nany evolvable system at any point in its life. No one seeing RSS 1.0 and RSS \n0.91 side-by-side could doubt that RSS 1.0 had the superior technology, that it \n&#8220;did things right&#8221;. However, the ability to understand what is \nmissing at any given moment does not mean that one person or a small central \ngroup can design a better system in the long haul. \n\nDesigned formats start out strong and improve logarithmically. Evolvable \nformats start out weak and improve exponentially. RSS 2.0 is not the perfect \nsyndication format, just the best one that's also currently practical. \nInfrastructure built on evolvable formats will always be partially incomplete, \npartially wrong and ultimately better designed than its competition.\n\n\n\n[1] http://www.shirky.com/writings/evolve.html\n[2] http://groups.yahoo.com/group/syndication/message/467\n\n\n"}