{"id":"01679","group":"easy-ham-1","checksum":{"type":"MD5","value":"e027f2af78c05f8498f09d7979cd127d"},"text":"Return-Path: jeremy@alum.mit.edu\nDelivery-Date: Sat Sep  7 01:00:14 2002\nFrom: jeremy@alum.mit.edu (Jeremy Hylton)\nDate: Fri, 6 Sep 2002 20:00:14 -0400\nSubject: [Spambayes] understanding high false negative rate\nIn-Reply-To: <LNBBLJKPBEHFEDALKOLCIEJKBCAB.tim.one@comcast.net>\nReferences: <15737.2576.315460.956295@slothrop.zope.com>\n\t<LNBBLJKPBEHFEDALKOLCIEJKBCAB.tim.one@comcast.net>\nMessage-ID: <15737.16782.542869.368986@slothrop.zope.com>\n\n>>>>> \"TP\" == Tim Peters <tim.one@comcast.net> writes:\n\n  >> The false positive rate is 0-3%.  (Finally!  I had to scrub a\n  >> bunch of previously unnoticed spam from my inbox.)  Both\n  >> collections have about 1100 messages.\n\n  TP> Does this mean you trained on about 1100 of each?\n\nThe total collections are 1100 messages.  I trained with 1100/5\nmessages. \n\n  TP> Can't guess.  You're in a good position to start adding more\n  TP> headers into the analysis, though.  For example, an easy start\n  TP> would be to uncomment the header-counting lines in tokenize()\n  TP> (look for \"Anthony\").  Likely the most valuable thing it's\n  TP> missing then is some special parsing and tagging of Received\n  TP> headers.\n\nI tried the \"Anthony\" stuff, but it didn't make any appreciable\ndifference that I could see from staring at the false negative rate.\nThe numbers are big enough that a quick eyeball suffices.\n\nThen I tried a dirt simple tokenizer for the headers that tokenize the\nwords in the header and emitted like this \"%s: %s\" % (hdr, word).\nThat worked too well :-).  The received and date headers helped the\nclassifier discover that most of my spam is old and most of my ham is\nnew.\n\nSo I tried a slightly more complex one that skipped received, data,\nand x-from_, which all contained timestamps.  I also skipped the X-VM-\nheaders that my mail reader added:\n\nclass MyTokenizer(Tokenizer):\n\n    skip = {'received': 1,\n            'date': 1,\n            'x-from_': 1,\n            }\n\n    def tokenize_headers(self, msg):\n        for k, v in msg.items():\n            k = k.lower()\n            if k in self.skip or k.startswith('x-vm'):\n                continue\n            for w in subject_word_re.findall(v):\n                for t in tokenize_word(w):\n                    yield \"%s:%s\" % (k, t)\n\nThis did moderately better.  The false negative rate is 7-21% over the\ntests performed so far.  This is versus 11-28% for the previous test\nrun that used the timtest header tokenizer.\n\nIt's interesting to see that the best descriminators are all ham\ndiscriminators.  There's not a single spam-indicator in the list.\nMost of the discriminators are header fields.  One thing to note is\nthat the presence of Mailman-generated headers is a strong non-spam\nindicator.  That matches my intuition: I got an awful lot of\nMailman-generated mail, and those lists are pretty good at surpressing\nspam.  The other thing is that I get a lot of ham from people who use\nXEmacs.  That's probably Barry, Guido, Fred, and me :-).\n\nOne final note.  It looks like many of the false positives are from\npeople I've never met with questions about Shakespeare.  They often\nstart with stuff like:\n\n> Dear Sir/Madam,\n> \n> May I please take some of your precious time to ask you to help me to find a\n> solution to a problem that is worrying me greatly. I am old science student\n\nI guess that reads a lot like spam :-(.\n\nJeremy\n\n\n238 hams & 221 spams\n    false positive: 2.10084033613\n    false negative: 9.50226244344\n    new false positives: []\n    new false negatives: []\n\n    best discriminators:\n        'x-mailscanner:clean' 671 0.0483425\n        'x-spam-status:IN_REP_TO' 679 0.01\n        'delivered-to:skip:s 10' 691 0.0829876\n        'x-mailer:Lucid' 699 0.01\n        'x-mailer:XEmacs' 699 0.01\n        'x-mailer:patch' 699 0.01\n        'x-mailer:under' 709 0.01\n        'x-mailscanner:Found' 716 0.0479124\n        'cc:zope.com' 718 0.01\n        \"i'll\" 750 0.01\n        'references:skip:1 20' 767 0.01\n        'rossum' 795 0.01\n        'x-spam-status:skip:S 10' 825 0.01\n        'van' 850 0.01\n        'http0:zope' 869 0.01\n        'email addr:zope' 883 0.01\n        'from:python.org' 895 0.01\n        'to:jeremy' 902 0.185401\n        'zope' 984 0.01\n        'list-archive:skip:m 10' 1058 0.01\n        'list-subscribe:skip:m 10' 1058 0.01\n        'list-unsubscribe:skip:m 10' 1058 0.01\n        'from:zope.com' 1098 0.01\n        'return-path:zope.com' 1115 0.01\n        'wrote:' 1129 0.01\n        'jeremy' 1150 0.01\n        'email addr:python' 1257 0.01\n        'x-mailman-version:2.0.13' 1311 0.01\n        'x-mailman-version:101270' 1395 0.01\n        'python' 1401 0.01\n\n"}