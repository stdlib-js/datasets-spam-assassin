{"id":"01661","group":"easy-ham-1","checksum":{"type":"MD5","value":"1393ea887720c777d1429b07fce98ab4"},"text":"Return-Path: neale@woozle.org\nDelivery-Date: Fri Sep  6 18:13:17 2002\nFrom: neale@woozle.org (Neale Pickett)\nDate: 06 Sep 2002 10:13:17 -0700\nSubject: [Spambayes] Deployment\nIn-Reply-To: <200209061506.g86F6Qo14777@pcp02138704pcs.reston01.va.comcast.net>\nReferences: <200209061431.g86EVM114413@pcp02138704pcs.reston01.va.comcast.net>\n\t<15736.50015.881231.510395@12-248-11-90.client.attbi.com>\n\t<200209061506.g86F6Qo14777@pcp02138704pcs.reston01.va.comcast.net>\nMessage-ID: <w53lm6fca8i.fsf@woozle.org>\n\nSo then, Guido van Rossum <guido@python.org> is all like:\n\n> > Basic procmail usage goes something like this:\n> > \n> >     :0fw\n> >     | spamassassin -P\n> > \n> >     :0\n> >     * ^X-Spam-Status: Yes\n> >     $SPAM\n> > \n> \n> Do you feel capable of writing such a tool?  It doesn't look too hard.\n\nNot to beat a dead horse, but that's exactly what my spamcan package\ndid.  For those just tuning in, spamcan is a thingy I wrote before I\nknew about Tim & co's work on this crazy stuff; you can download it from\n<http://woozle.org/~neale/src/spamcan/spamcan.html>, but I'm not going\nto work on it anymore.\n\nI'm currently writing a new one based on classifier (and timtest's\nbooty-kicking tokenizer).  I'll probably have something soon, like maybe\nhalf an hour, and no, it's not too hard.  The hard part is storing the\ndata somewhere.  I don't want to use ZODB, as I'd like something a\nperson can just drop in with a default Python install.  So anydbm is\nlooking like my best option.\n\nI already have a setup like this using Xavier Leroy's SpamOracle, which\ndoes the same sort of thing.  You call it from procmail, it adds a new\nheader, and then you can filter on that header.  Really easy.\n\nHere's how I envision this working.  Everybody gets four new mailboxes:\n\n  train-eggs\n  train-spam\n  trained-eggs\n  trained-spam\n\nYou copy all your spam and eggs* into the \"train-\" boxes as you get it.\nHow frequently you do this would be up to you, but you'd get better\nresults if you did it more often, and you'd be wise to always copy over\nanything which was misclassified.  Then, every night, the spam fairy\nswoops down and reads through your folders, learning about what sorts of\nthings you think are eggs and what sorts of things are spam.  After she's\ndone, she moves your mail into the \"trained-\" folders.\n\nThis would work for anybody using IMAP on a Unix box, or folks who read\ntheir mail right off the server.  I've spoken with some fellows at work\nabout Exchange and they seem to beleive that Exchange exports\nappropriate functionality to implement a spam fairy as well.\n\nAdvanced users could stay ahead of the game by reprogramming their mail\nclient to bind the key \"S\" to \"move to train-spam\" and \"H\" to \"move to\ntrain-eggs\".  Eventually, if enough people used this sort of thing, it'd\nstart showing up in mail clients.  That's the \"delete as spam\" button\nPaul Graham was talking about.\n\n* The Hormel company might not think well of using the word \"ham\" as the\n  opposite of \"spam\", and they've been amazingly cool about the use of\n  their product name for things thus far.  So I propose we start calling\n  non-spam something more innocuous (and more Monty Pythonic) such as\n  \"eggs\".\n\nNeale\n"}