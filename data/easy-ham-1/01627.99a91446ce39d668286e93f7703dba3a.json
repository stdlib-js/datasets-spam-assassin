{"id":"01627","group":"easy-ham-1","checksum":{"type":"MD5","value":"99a91446ce39d668286e93f7703dba3a"},"text":"From secprog-return-486-jm=jmason.org@securityfocus.com  Fri Sep  6 11:38:55 2002\nReturn-Path: <secprog-return-486-yyyy=spamassassin.taint.org@securityfocus.com>\nDelivered-To: yyyy@localhost.spamassassin.taint.org\nReceived: from localhost (jalapeno [127.0.0.1])\n\tby jmason.org (Postfix) with ESMTP id B316216F1F\n\tfor <jm@localhost>; Fri,  6 Sep 2002 11:37:39 +0100 (IST)\nReceived: from jalapeno [127.0.0.1]\n\tby localhost with IMAP (fetchmail-5.9.0)\n\tfor jm@localhost (single-drop); Fri, 06 Sep 2002 11:37:39 +0100 (IST)\nReceived: from webnote.net (mail.webnote.net [193.120.211.219]) by\n    dogma.slashnull.org (8.11.6/8.11.6) with ESMTP id g869vdC29831 for\n    <jm@jmason.org>; Fri, 6 Sep 2002 10:57:39 +0100\nReceived: from outgoing.securityfocus.com (outgoing3.securityfocus.com\n    [66.38.151.27]) by webnote.net (8.9.3/8.9.3) with ESMTP id UAA17981 for\n    <jm@jmason.org>; Thu, 5 Sep 2002 20:39:21 +0100\nReceived: from lists.securityfocus.com (lists.securityfocus.com\n    [66.38.151.19]) by outgoing.securityfocus.com (Postfix) with QMQP id\n    B2716A3138; Thu,  5 Sep 2002 10:51:17 -0600 (MDT)\nMailing-List: contact secprog-help@securityfocus.com; run by ezmlm\nPrecedence: bulk\nList-Id: <secprog.list-id.securityfocus.com>\nList-Post: <mailto:secprog@securityfocus.com>\nList-Help: <mailto:secprog-help@securityfocus.com>\nList-Unsubscribe: <mailto:secprog-unsubscribe@securityfocus.com>\nList-Subscribe: <mailto:secprog-subscribe@securityfocus.com>\nDelivered-To: mailing list secprog@securityfocus.com\nDelivered-To: moderator for secprog@securityfocus.com\nReceived: (qmail 15430 invoked from network); 5 Sep 2002 15:26:58 -0000\nFrom: bmord@icon-nicholson.com (Ben Mord)\nTo: \"Crispin Cowan\" <crispin@wirex.com>\nCc: \"Webappsec Securityfocus.Com\" <webappsec@securityfocus.com>,\n\t\"SECPROG Securityfocus\" <SECPROG@securityfocus.com>\nSubject: RE: use of base image / delta image for automated recovery from\n    attacks\nDate: Thu, 5 Sep 2002 11:42:40 -0400\nMessage-Id: <NAEOJLMPJMJDFPLHIOJOGEHBDBAA.bmord@icon-nicholson.com>\nMIME-Version: 1.0\nContent-Type: text/plain; charset=\"iso-8859-1\"\nContent-Transfer-Encoding: 7bit\nX-Priority: 3 (Normal)\nX-Msmail-Priority: Normal\nX-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2911.0)\nImportance: Normal\nX-Mimeole: Produced By Microsoft MimeOLE V5.50.4522.1200\nIn-Reply-To: <3D76977B.9010606@wirex.com>\n\n\n-----Original Message-----\nFrom: Crispin Cowan [mailto:crispin@wirex.com]\nSent: Wednesday, September 04, 2002 7:30 PM\nTo: Ben Mord\nCc: Webappsec Securityfocus.Com; SECPROG Securityfocus\nSubject: Re: use of base image / delta image for automated recovery from\nattacks\n\n\nBen Mord wrote:\n\n>>     -----Original Message-----\n>>     *From:* Crispin Cowan [mailto:crispin@wirex.com]\n>>     *Sent:* Wednesday, September 04, 2002 5:46 PM\n>>     *To:* Ben Mord\n>>     *Cc:* Webappsec Securityfocus.Com; SECPROG Securityfocus\n>>     *Subject:* Re: use of base image / delta image for automated\n>>     recovery from attacks\n>>\n>>     Ben Mord wrote:\n>>\n>> My proposed solution to the first two problems you mention is to be\n>> less ambitious. The idea is that you *never* commit - instead, you\n>> simply revert to base state on reboot.\n\n>Ah. In that case, you can use something considerably less powerful than\n>VMWare. All you need is a machine configured to boot from CD-ROM and use\n>a RAM disk for scratch space. Numerous Linux distros are available that\n>let you boot a stateless but functional system from CD-ROM.\n\nBut RAM is expensive, and the directory structures of many systems (e.g.\nWindows) are not sufficiently organized and standardized to make this\ncombination of bootable CDs and RAM drives practical. Even if you are\nfortunate enough to be using Linux (or another FHS-compliant *nix), you\nstill can't fit a lot on a CD. Its not unusual today to have gigabytes of\nstatic multimedia content on the web server. This particular problem can be\nalleviated somewhat by using DVDs, but this is a temporary solution at best\nwhich will become outdated quickly as our data requirements grow and hard\ndrives become cheaper.\n\n>> Obviously, you can't do this with partitions that accrue important\n>> state, e.g. a partition that stores database table data.\n\n>... but if you *do* want some state to persist, then you need a\n>mountable writable partition. To protect it, you need some kind of\n>access control management to decide who can do what to the writable\n>partition, blah blah blah ... and before you know it, the security\n>problem starts to look just like it does for conventional servers.\n\nRight. This is why you would consolidate all state of any long-term\nsignificance on just a couple partitions, and why you would not put static\napplication code on these changeable partitions. Fortunately, most large\nclient/server application physical architectures do this anyhow, because\nthese are two fundamentally different kinds of state with two very different\nsets of administrative, security, RAID, and backup requirements. People also\ntend to do this anyhow because layered logical architectures are popular\nwith the GUI at one end, business logic in the middle, and persistence\nservices at the other. This logical architecture maps naturally to a\nphysical architecture that has a static web server, a static application\nserver, and a database server that has static and changeable partitions. (I\nuse the word static versus changeable instead of writeable versus unwritable\nbecause the \"unchangeable\" partitions might be written to for temporary swap\nspace. Who knows what Windows does internally?)\n\nMy point is that there should be a market out there for a hardware RAID\ndevice that can split designated partitions into a permanent base image\npartition and a temporary delta image partition, that has some simple but\nsolid security measures to prevent the unauthorized remote modification of\nbase images, and that can be configured to clear the delta image when the\nserver is rebooted. If some vendor wished to implement this, they could then\nmarket this as a mechanism to help frustrate broad classes of attack that\nrely on the permanent modification of system or application files via buffer\noverflows, platform and middleware bugs, etc. The prevention of unauthorized\nmodification of application data, of course, would not be addressed by this\nparticular product. But there are many other techniques out there to defend\napplication data. But those techniques all assume that your system itself\nhas not been compromised at a lower level, which is where this product could\nhelp.\n\nI would have to think that these features would be relatively easy for a\nhardware RAID vendor to implement. (I'm just guessing, of course, with no\nknowledge of how hardware RAID works internally.) If anyone knows of such a\nproduct, I'd love to hear about it.\n\nBen\n\n\n"}