{"id":"01724","group":"easy-ham-1","checksum":{"type":"MD5","value":"9dd46d474cc33df16c9443ac6759e679"},"text":"Return-Path: tim.one@comcast.net\nDelivery-Date: Sun Sep  8 21:46:47 2002\nFrom: tim.one@comcast.net (Tim Peters)\nDate: Sun, 08 Sep 2002 16:46:47 -0400\nSubject: [Spambayes] hammie.py vs. GBayes.py\nIn-Reply-To: <200209070351.g873pC613144@pcp02138704pcs.reston01.va.comcast.net>\nMessage-ID: <LNBBLJKPBEHFEDALKOLCCEPOBCAB.tim.one@comcast.net>\n\n[Guido]\n> There seem to be two \"drivers\" for the classifier now: Neale Pickett's\n> hammie.py, and the original GBayes.py.  According to the README.txt,\n> GBayes.py hasn't been kept up to date.\n\nIt seemed that way to me when I ripped the classifier out of it -- I don't\nthink anyone has touched it after.\n\n> Is there anything in there that isn't covered by hammie.py?\n\nSomeone else will have to answer that (I don't use GBayes or hammie, at\nleast not yet).\n\n> About the only useful feature of GBayes.py that hammie.py doesn't (yet)\n> copy is -u, which calculates spamness for an entire mailbox.  This\n> feature can easily be copied into hammie.py.\n\nThat's been done now, right?\n\n> (GBayes.py also has a large collection of tokenizers; but timtoken.py\n> rules, so I'm not sure how interesting that is now.)\n\nThose tokenizers are truly trivial to rewrite from scratch if they're\ninteresting.  The tiny spam/ham collections in GBayes are also worthless\nnow.  The \"self test\" feature didn't do anything except print its results;\nTester.py since became doctest'ed and verifies that some basic machinery\nactually delivers what it's supposed to deliver.\n\n> Therefore I propose to nuke GBayes.py, after adding a -u feature.\n\n+1 here.\n\n> Anyone against?\n\n"}