{"id":"01407","group":"easy-ham-1","checksum":{"type":"MD5","value":"5388b24c7941469cb0164922cf67d111"},"text":"From dwheeler@ida.org  Tue Sep  3 17:20:20 2002\nReturn-Path: <dwheeler@ida.org>\nDelivered-To: yyyy@localhost.spamassassin.taint.org\nReceived: from localhost (jalapeno [127.0.0.1])\n\tby jmason.org (Postfix) with ESMTP id 7C6BB16F69\n\tfor <jm@localhost>; Tue,  3 Sep 2002 17:20:19 +0100 (IST)\nReceived: from jalapeno [127.0.0.1]\n\tby localhost with IMAP (fetchmail-5.9.0)\n\tfor jm@localhost (single-drop); Tue, 03 Sep 2002 17:20:19 +0100 (IST)\nReceived: from outgoing.securityfocus.com (outgoing2.securityfocus.com\n    [66.38.151.26]) by dogma.slashnull.org (8.11.6/8.11.6) with ESMTP id\n    g83G4ZZ26141 for <jm@jmason.org>; Tue, 3 Sep 2002 17:04:36 +0100\nReceived: from lists.securityfocus.com (lists.securityfocus.com\n    [66.38.151.19]) by outgoing.securityfocus.com (Postfix) with QMQP id\n    326048F2CD; Tue,  3 Sep 2002 09:00:08 -0600 (MDT)\nMailing-List: contact secprog-help@securityfocus.com; run by ezmlm\nPrecedence: bulk\nList-Id: <secprog.list-id.securityfocus.com>\nList-Post: <mailto:secprog@securityfocus.com>\nList-Help: <mailto:secprog-help@securityfocus.com>\nList-Unsubscribe: <mailto:secprog-unsubscribe@securityfocus.com>\nList-Subscribe: <mailto:secprog-subscribe@securityfocus.com>\nDelivered-To: mailing list secprog@securityfocus.com\nDelivered-To: moderator for secprog@securityfocus.com\nReceived: (qmail 21914 invoked from network); 30 Aug 2002 14:21:06 -0000\nMessage-Id: <3D6F8139.8040106@ida.org>\nDate: Fri, 30 Aug 2002 10:29:13 -0400\nFrom: David Wheeler <dwheeler@ida.org>\nUser-Agent: Mozilla/5.0 (X11; U; SunOS sun4u; en-US; rv:0.9.4.1)\n    Gecko/20020518 Netscape6/6.2.3\nX-Accept-Language: en-us\nMIME-Version: 1.0\nTo: Giorgio Zoppi <deneb@penguin.it>, secprog@securityfocus.com\nSubject: Re: Storing passwords\nReferences: <3D66376D.4000809@ida.org> <20020827122630.D7017@cli.di.unipi.it>\nContent-Type: text/plain; charset=us-ascii; format=flowed\nContent-Transfer-Encoding: 7bit\n\nIf you need to store a database password, then\nclearly the first step is to store the text outside the\nweb tree.  You can encrypt it and store the encryption key elsewhere,\nso that at least an attacker has to get two different things.\nAlso, don't get full privileges - create a user account that\nis GRANTed very limited access.\n\nHowever, you can often do better than this if security\nis critical.  Create a separate program which has these\ndatabase keys (as noted above), and make the web program\ncontact IT.  Create a very limited protocol that ONLY\nlets you do the operations you need (you can add specific\noperations later).  There's a performance hit, which you're\ntrading for improved data isolation.\n\n\n\nGiorgio Zoppi wrote:\n\n> On Fri, Aug 23, 2002, David Wheeler wrote:\n> \n> \n>>The standard way to store passwords is... not to\n>>store passwords.  Instead, store a salted hash of\n>>the password in a database.  When you get a purported\n>>password, you re-salt it, compute the hash, and\n>>determine if they are the same.  This is how\n>>Unix has done it for years.  You want bigger hashes\n>>and salts than the old Unix systems, and you still want\n>>to prevent reading from those files (to foil password crackers).\n>>More info is in my book at:\n>>   http://www.dwheeler.com/secure-programs\n>>\n> \n> Well...but this cannot be applied to database password, which most\n> web apps use. The only solution I figure is store in clear outside web\n> tree, any other ideas feasible?\n> \n> Ciao,\n> Giorgio.\n> \n> --\n> Never is Forever - deneb@penguin.it\n> Homepage: http://www.cli.di.unipi.it/~zoppi/index.html\n> --\n> \n> \n> \n\n\n-- \n\n--- David A. Wheeler\n     dwheeler@ida.org\n\n\n\n"}