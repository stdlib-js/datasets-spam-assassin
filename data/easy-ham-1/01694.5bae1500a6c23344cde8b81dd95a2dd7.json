{"id":"01694","group":"easy-ham-1","checksum":{"type":"MD5","value":"5bae1500a6c23344cde8b81dd95a2dd7"},"text":"Return-Path: neale@woozle.org\nDelivery-Date: Sat Sep  7 06:17:28 2002\nFrom: neale@woozle.org (Neale Pickett)\nDate: 06 Sep 2002 22:17:28 -0700\nSubject: [Spambayes] Ditching WordInfo\nIn-Reply-To: <LNBBLJKPBEHFEDALKOLCOEKKBCAB.tim.one@comcast.net>\nReferences: <LNBBLJKPBEHFEDALKOLCOEKKBCAB.tim.one@comcast.net>\nMessage-ID: <w53n0qubcpj.fsf@woozle.org>\n\nSo then, Tim Peters <tim.one@comcast.net> is all like:\n\n> I'm not sure what you're doing, but suspect you're storing individual\n> WordInfo pickles.  If so, most of the administrative pickle bloat is\n> due to that, and doesn't happen if you pickle an entire classifier\n> instance directly.\n\nYeah, that's exactly what I was doing--I didn't realize I was incurring\nadministrative pickle bloat this way.  I'm specifically trying to make\nthings faster and smaller, so I'm storing individual WordInfo pickles\ninto an anydbm dict (keyed by token).  The result is that it's almost 50\ntimes faster to score messages one per run our of procmail (.408s vs\n18.851s).\n\nHowever, it *does* say all over the place that the goal of this project\nisn't to make the fastest or the smallest implementation, so I guess\nI'll hold off doing any further performance tuning until the goal starts\nto point more in that direction.  .4 seconds is probably fast enough for\npeople to use it in their procmailrc, which is what I was after.\n\n> If you're desparate to save memory, write a subclass?\n\nThat's probably what I'll do if I get too antsy :)\n\nTrying to think of ways to sneak \"administrative pickle boat\" into\ncasual conversation,\n\nNeale\n"}